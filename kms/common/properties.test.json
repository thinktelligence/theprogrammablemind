[
  {
    "associations": [
      [
        [
          "modifies",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "modifies",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "modifies",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        },
        {
          "allowDups": true,
          "bridge": "{ ...next(operator) }",
          "id": "strip_modifier",
          "level": 0,
          "transitoryMode": true
        },
        {
          "allowDups": true,
          "bridge": "{ ...next(operator), value: 'chicken' }",
          "id": "chicken",
          "level": 0,
          "transitoryMode": true
        },
        {
          "allowDups": true,
          "bridge": "{ ...next(operator), value: 'strip' }",
          "id": "strip",
          "level": 0,
          "transitoryMode": true
        },
        {
          "allowDups": true,
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], 'modifier_chicken': before[0], atomic: true, dead: true, marker: next(operator('chicken_strip')), value: 'chicken_strip', modifiers: append(['modifier_chicken'], after[0].modifiers)}",
          "convolution": true,
          "id": "chicken_strip",
          "isA": [
            {
              "instance": true,
              "parent": "adjective"
            }
          ],
          "level": 0,
          "transitoryMode": true
        }
      ],
      "operators": [
        {
          "allowDups": true,
          "pattern": "([strip|])"
        },
        {
          "allowDups": true,
          "pattern": "([chicken|])"
        },
        {
          "allowDups": true,
          "pattern": "([strip_modifier|])"
        },
        {
          "allowDups": true,
          "pattern": "((chicken/*) [chicken_strip] (strip/*))"
        },
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "chicken": [
            {
              "id": "chicken",
              "initial": "{ value: 'chicken', number: 'one' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "strip": [
            {
              "id": "strip",
              "initial": "{ value: 'strip', number: 'one' }"
            }
          ],
          "strips": [
            {
              "id": "strip",
              "initial": "{ value: 'strip', number: 'many' }"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "concept": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 22,
            "start": 17
          },
          "text": "strips",
          "unknown": true,
          "value": "strips",
          "word": "strips"
        },
        "context_index": 1,
        "dead": true,
        "flatten": false,
        "level": 1,
        "marker": "modifies",
        "modifiers": [
          {
            "dead": true,
            "level": 1,
            "marker": "unknown",
            "range": {
              "end": 6,
              "start": 0
            },
            "text": "chicken",
            "unknown": true,
            "value": "chicken",
            "word": "chicken"
          }
        ],
        "number": "one",
        "range": {
          "end": 22,
          "start": 0
        },
        "text": "chicken modifies strips",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "word": "modifies"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "modifies",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "modifies",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "modifies",
            0
          ],
          "ops": [
            [
              "modifies",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "concept": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 22,
                "start": 17
              },
              "text": "strips",
              "unknown": true,
              "value": "strips",
              "word": "strips"
            },
            "context_index": 1,
            "dead": true,
            "flatten": false,
            "level": 1,
            "marker": "modifies",
            "modifiers": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 6,
                  "start": 0
                },
                "text": "chicken",
                "unknown": true,
                "value": "chicken",
                "word": "chicken"
              }
            ],
            "number": "one",
            "range": {
              "end": 22,
              "start": 0
            },
            "text": "chicken modifies strips",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "word": "modifies"
          },
          "generatedParenthesized": "",
          "paraphrases": "chicken modifies strips",
          "paraphrasesParenthesized": "((chicken) (modifies) (strips))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "chicken modifies strips"
    ],
    "paraphrasesParenthesized": [
      "((chicken) (modifies) (strips))"
    ],
    "query": "chicken modifies strips",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "modifies",
                0
              ],
              "range": {
                "end": 15,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "modifies",
                0
              ],
              "range": {
                "end": 15,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "modifies",
                0
              ],
              "range": {
                "end": 15,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "modifies",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        },
        {
          "allowDups": true,
          "bridge": "{ ...next(operator) }",
          "id": "strip_modifier",
          "level": 0,
          "transitoryMode": true
        },
        {
          "allowDups": true,
          "bridge": "{ ...next(operator), value: 'chicken' }",
          "id": "chicken",
          "level": 0,
          "transitoryMode": true
        },
        {
          "allowDups": true,
          "bridge": "{ ...next(operator), value: 'strip' }",
          "id": "strip",
          "level": 0,
          "transitoryMode": true
        },
        {
          "allowDups": true,
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], 'modifier_chicken': before[0], atomic: true, dead: true, marker: next(operator('chicken_strip')), value: 'chicken_strip', modifiers: append(['modifier_chicken'], after[0].modifiers)}",
          "convolution": true,
          "id": "chicken_strip",
          "isA": [
            {
              "instance": true,
              "parent": "adjective"
            }
          ],
          "level": 0,
          "transitoryMode": true
        }
      ],
      "operators": [
        {
          "allowDups": true,
          "pattern": "([strip|])"
        },
        {
          "allowDups": true,
          "pattern": "([chicken|])"
        },
        {
          "allowDups": true,
          "pattern": "([strip_modifier|])"
        },
        {
          "allowDups": true,
          "pattern": "((chicken/*) [chicken_strip] (strip/*))"
        },
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "chicken": [
            {
              "id": "chicken",
              "initial": "{ value: 'chicken', number: 'one' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "strip": [
            {
              "id": "strip",
              "initial": "{ value: 'strip', number: 'one' }"
            }
          ],
          "strips": [
            {
              "id": "strip",
              "initial": "{ value: 'strip', number: 'many' }"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "concept": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 22,
            "start": 17
          },
          "text": "strips",
          "unknown": true,
          "value": "strips",
          "word": "strips"
        },
        "context_index": 1,
        "dead": true,
        "flatten": false,
        "level": 1,
        "marker": "modifies",
        "modifiers": [
          {
            "dead": true,
            "level": 1,
            "marker": "unknown",
            "range": {
              "end": 6,
              "start": 0
            },
            "text": "chicken",
            "unknown": true,
            "value": "chicken",
            "word": "chicken"
          }
        ],
        "number": "one",
        "range": {
          "end": 22,
          "start": 0
        },
        "text": "chicken modifies strips",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "word": "modifies"
      },
      {
        "atomic": true,
        "context_index": 1,
        "dead": true,
        "level": 1,
        "marker": "chicken_strip",
        "modifier_chicken": {
          "level": 0,
          "marker": "chicken",
          "number": "one",
          "range": {
            "end": 6,
            "start": 0
          },
          "text": "chicken",
          "types": [
            "chicken"
          ],
          "value": "chicken",
          "word": "chicken"
        },
        "modifiers": [
          "modifier_chicken"
        ],
        "number": "many",
        "range": {
          "end": 13,
          "start": 0
        },
        "text": "chicken strips",
        "topLevel": true,
        "types": [
          "chicken_strip",
          "strip"
        ],
        "value": "chicken_strip",
        "word": "strips"
      }
    ],
    "generatedParenthesized": [
      "",
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "modifies",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "modifies",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "modifies",
            0
          ],
          "ops": [
            [
              "modifies",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "chicken_strip",
            0
          ],
          "ops": [
            [
              "chicken",
              0
            ],
            [
              "chicken_strip",
              0
            ],
            [
              "strip",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "atomic": true,
            "context_index": 1,
            "dead": true,
            "level": 1,
            "marker": "chicken_strip",
            "modifier_chicken": {
              "level": 0,
              "marker": "chicken",
              "number": "one",
              "range": {
                "end": 6,
                "start": 0
              },
              "text": "chicken",
              "types": [
                "chicken"
              ],
              "value": "chicken",
              "word": "chicken"
            },
            "modifiers": [
              "modifier_chicken"
            ],
            "number": "many",
            "range": {
              "end": 13,
              "start": 0
            },
            "text": "chicken strips",
            "topLevel": true,
            "types": [
              "chicken_strip",
              "strip"
            ],
            "value": "chicken_strip",
            "word": "strips"
          },
          "generatedParenthesized": "",
          "paraphrases": "chicken strips",
          "paraphrasesParenthesized": "((chicken) (strips))",
          "responses": [
            ""
          ]
        },
        {
          "context": {
            "concept": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 22,
                "start": 17
              },
              "text": "strips",
              "unknown": true,
              "value": "strips",
              "word": "strips"
            },
            "context_index": 1,
            "dead": true,
            "flatten": false,
            "level": 1,
            "marker": "modifies",
            "modifiers": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 6,
                  "start": 0
                },
                "text": "chicken",
                "unknown": true,
                "value": "chicken",
                "word": "chicken"
              }
            ],
            "number": "one",
            "range": {
              "end": 22,
              "start": 0
            },
            "text": "chicken modifies strips",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "word": "modifies"
          },
          "generatedParenthesized": "",
          "paraphrases": "chicken modifies strips",
          "paraphrasesParenthesized": "((chicken) (modifies) (strips))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "chicken modifies strips",
      "chicken strips"
    ],
    "paraphrasesParenthesized": [
      "((chicken) (modifies) (strips))",
      "((chicken) (strips))"
    ],
    "query": "chicken modifies strips\\nchicken strips",
    "responses": [
      "",
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "modifies",
                0
              ],
              "range": {
                "end": 15,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "modifies",
                0
              ],
              "range": {
                "end": 15,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "modifies",
                0
              ],
              "range": {
                "end": 15,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "modifies",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            }
          ]
        }
      ],
      [
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "chicken",
                0
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "strip",
                0
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "chicken_strip",
                1
              ],
              "range": {
                "end": 13,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "doesnt",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "doesnt",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "doesnt",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 21,
            "start": 0
          },
          "right": "property",
          "text": "greg doesnt have wings"
        },
        "doesable": true,
        "is_compound": true,
        "level": 2,
        "marker": "have",
        "negation": true,
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 21,
            "start": 0
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 21,
            "start": 17
          },
          "text": "wings",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "wings",
          "word": "wings"
        },
        "range": {
          "end": 21,
          "start": 0
        },
        "sameWasProcessed": true,
        "text": "greg doesnt have wings",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "types": [
          "have"
        ],
        "word": "have"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "doesnt",
            0
          ],
          "ops": [
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "have",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "greg"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "wing": {
                  "has": false,
                  "value": null
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 21,
                "start": 0
              },
              "right": "property",
              "text": "greg doesnt have wings"
            },
            "doesable": true,
            "is_compound": true,
            "level": 2,
            "marker": "have",
            "negation": true,
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 21,
                "start": 0
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 21,
                "start": 17
              },
              "text": "wings",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "wings",
              "word": "wings"
            },
            "range": {
              "end": 21,
              "start": 0
            },
            "sameWasProcessed": true,
            "text": "greg doesnt have wings",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "types": [
              "have"
            ],
            "word": "have"
          },
          "generatedParenthesized": "",
          "paraphrases": "greg doesnt have wings",
          "paraphrasesParenthesized": "((greg) doesnt have (wings))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "greg doesnt have wings"
    ],
    "paraphrasesParenthesized": [
      "((greg) doesnt have (wings))"
    ],
    "query": "greg doesnt have wings",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "doesnt",
                0
              ],
              "range": {
                "end": 10,
                "start": 5
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "doesnt",
                0
              ],
              "range": {
                "end": 10,
                "start": 5
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "doesnt",
                0
              ],
              "range": {
                "end": 10,
                "start": 5
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 21,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 21,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "does",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "does",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "does",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "does",
          0
        ],
        [
          "have",
          1
        ]
      ],
      [
        [
          "doesnt",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "doesnt",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "doesnt",
          0
        ],
        [
          "have",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 21,
            "start": 0
          },
          "right": "property",
          "text": "greg doesnt have wings"
        },
        "doesable": true,
        "is_compound": true,
        "level": 2,
        "marker": "have",
        "negation": true,
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 21,
            "start": 0
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 21,
            "start": 17
          },
          "text": "wings",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "wings",
          "word": "wings"
        },
        "range": {
          "end": 21,
          "start": 0
        },
        "sameWasProcessed": true,
        "text": "greg doesnt have wings",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "types": [
          "have"
        ],
        "word": "have"
      },
      {
        "context_index": 3,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 42,
            "start": 28
          },
          "right": "property",
          "text": ""
        },
        "doesable": true,
        "evalue": {
          "marker": "yesno",
          "value": false
        },
        "isResponse": true,
        "is_compound": true,
        "level": 2,
        "marker": "have",
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 42,
            "start": 28
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 42,
            "start": 38
          },
          "text": "wings",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "wings",
          "word": "wings"
        },
        "query": true,
        "range": {
          "end": 42,
          "start": 28
        },
        "text": "greg have wings",
        "topLevel": true,
        "touchedBy": [
          "properties#call10"
        ],
        "types": [
          "have"
        ],
        "what": "does",
        "word": "have"
      }
    ],
    "generatedParenthesized": [
      "",
      "(no)"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "does",
              0
            ],
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "does",
              0
            ],
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "does",
              0
            ],
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "does",
              0
            ],
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "doesnt",
            0
          ],
          "ops": [
            [
              "does",
              0
            ],
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "have",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "does",
              0
            ],
            [
              "have",
              0
            ],
            [
              "have",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "does",
              0
            ],
            [
              "have",
              0
            ],
            [
              "have",
              1
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "does",
            0
          ],
          "ops": [
            [
              "does",
              0
            ],
            [
              "have",
              1
            ],
            [
              "have",
              1
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ],
            [
              "have",
              1
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "greg"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "wing": {
                  "has": false,
                  "value": null
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 42,
                "start": 28
              },
              "right": "property",
              "text": ""
            },
            "doesable": true,
            "evalue": {
              "marker": "yesno",
              "value": false
            },
            "isResponse": true,
            "is_compound": true,
            "level": 2,
            "marker": "have",
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 42,
                "start": 28
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 42,
                "start": 38
              },
              "text": "wings",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "wings",
              "word": "wings"
            },
            "query": true,
            "range": {
              "end": 42,
              "start": 28
            },
            "text": "greg have wings",
            "topLevel": true,
            "touchedBy": [
              "properties#call10"
            ],
            "types": [
              "have"
            ],
            "what": "does",
            "word": "have"
          },
          "generatedParenthesized": "(no)",
          "paraphrases": "does greg have wings?",
          "paraphrasesParenthesized": "((does (greg) have (wings))?)",
          "responses": [
            "",
            "no"
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 21,
                "start": 0
              },
              "right": "property",
              "text": "greg doesnt have wings"
            },
            "doesable": true,
            "is_compound": true,
            "level": 2,
            "marker": "have",
            "negation": true,
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 21,
                "start": 0
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 21,
                "start": 17
              },
              "text": "wings",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "wings",
              "word": "wings"
            },
            "range": {
              "end": 21,
              "start": 0
            },
            "sameWasProcessed": true,
            "text": "greg doesnt have wings",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "types": [
              "have"
            ],
            "word": "have"
          },
          "generatedParenthesized": "",
          "paraphrases": "greg doesnt have wings",
          "paraphrasesParenthesized": "((greg) doesnt have (wings))",
          "responses": [
            "",
            "no"
          ]
        }
      ]
    },
    "paraphrases": [
      "greg doesnt have wings",
      "does greg have wings?"
    ],
    "paraphrasesParenthesized": [
      "((greg) doesnt have (wings))",
      "((does (greg) have (wings))?)"
    ],
    "query": "greg doesnt have wings does greg have wings",
    "responses": [
      "",
      "no"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "doesnt",
                0
              ],
              "range": {
                "end": 10,
                "start": 5
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            },
            {
              "marker": [
                "does",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 31,
                "start": 28
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 36,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "doesnt",
                0
              ],
              "range": {
                "end": 10,
                "start": 5
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            },
            {
              "marker": [
                "does",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 31,
                "start": 28
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 36,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "doesnt",
                0
              ],
              "range": {
                "end": 10,
                "start": 5
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            },
            {
              "marker": [
                "does",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 31,
                "start": 28
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 36,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "doesnt",
                0
              ],
              "range": {
                "end": 10,
                "start": 5
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            },
            {
              "marker": [
                "does",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 31,
                "start": 28
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 36,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "doesnt",
                0
              ],
              "range": {
                "end": 10,
                "start": 5
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            },
            {
              "marker": [
                "does",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 31,
                "start": 28
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 36,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 21,
                "start": 17
              }
            },
            {
              "marker": [
                "does",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 31,
                "start": 28
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 36,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 21,
                "start": 0
              }
            },
            {
              "marker": [
                "does",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 31,
                "start": 28
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 36,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 21,
                "start": 0
              }
            },
            {
              "marker": [
                "does",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 42,
                "start": 28
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 21,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 42,
                "start": 28
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 21,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 42,
                "start": 28
              }
            }
          ]
        },
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 21,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 42,
                "start": 28
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 12,
            "start": 0
          },
          "right": "property",
          "text": "greg has eyes"
        },
        "doesable": true,
        "level": 2,
        "marker": "have",
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 12,
            "start": 0
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 12,
            "start": 9
          },
          "text": "eyes",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "eyes",
          "word": "eyes"
        },
        "range": {
          "end": 12,
          "start": 0
        },
        "sameWasProcessed": true,
        "text": "greg has eyes",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "word": "has"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "have",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "greg"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "eye": {
                  "has": true,
                  "value": null
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 12,
                "start": 0
              },
              "right": "property",
              "text": "greg has eyes"
            },
            "doesable": true,
            "level": 2,
            "marker": "have",
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 12,
                "start": 0
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 12,
                "start": 9
              },
              "text": "eyes",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "eyes",
              "word": "eyes"
            },
            "range": {
              "end": 12,
              "start": 0
            },
            "sameWasProcessed": true,
            "text": "greg has eyes",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "word": "has"
          },
          "generatedParenthesized": "",
          "paraphrases": "greg has eyes",
          "paraphrasesParenthesized": "((greg) has (eyes))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "greg has eyes"
    ],
    "paraphrasesParenthesized": [
      "((greg) has (eyes))"
    ],
    "query": "greg has eyes",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          1
        ],
        [
          "questionMark",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 12,
            "start": 0
          },
          "right": "property",
          "text": "greg has eyes"
        },
        "doesable": true,
        "level": 2,
        "marker": "have",
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 12,
            "start": 0
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 12,
            "start": 9
          },
          "text": "eyes",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "eyes",
          "word": "eyes"
        },
        "range": {
          "end": 12,
          "start": 0
        },
        "sameWasProcessed": true,
        "text": "greg has eyes",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "word": "has"
      },
      {
        "context_index": 3,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 26,
            "start": 14
          },
          "right": "property",
          "text": ""
        },
        "doesable": true,
        "evalue": {
          "marker": "yesno",
          "value": true
        },
        "isResponse": true,
        "level": 2,
        "marker": "have",
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 26,
            "start": 14
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 26,
            "start": 23
          },
          "text": "eyes",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "eyes",
          "word": "eyes"
        },
        "query": [
          "have"
        ],
        "range": {
          "end": 27,
          "start": 14
        },
        "text": "greg has eyes?",
        "topLevel": true,
        "touchedBy": [
          "properties#call10"
        ],
        "types": [
          "have"
        ],
        "word": "has"
      }
    ],
    "generatedParenthesized": [
      "",
      "(yes)"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              1
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ],
            [
              "have",
              1
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "questionMark",
            0
          ],
          "ops": [
            [
              "questionMark",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "greg"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "eye": {
                  "has": true,
                  "value": null
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 26,
                "start": 14
              },
              "right": "property",
              "text": ""
            },
            "doesable": true,
            "evalue": {
              "marker": "yesno",
              "value": true
            },
            "isResponse": true,
            "level": 2,
            "marker": "have",
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 26,
                "start": 14
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 26,
                "start": 23
              },
              "text": "eyes",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "eyes",
              "word": "eyes"
            },
            "query": [
              "have"
            ],
            "range": {
              "end": 27,
              "start": 14
            },
            "text": "greg has eyes?",
            "topLevel": true,
            "touchedBy": [
              "properties#call10"
            ],
            "types": [
              "have"
            ],
            "word": "has"
          },
          "generatedParenthesized": "(yes)",
          "paraphrases": "does greg have eyes?",
          "paraphrasesParenthesized": "((does (greg) have (eyes))?)",
          "responses": [
            "",
            "yes"
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 12,
                "start": 0
              },
              "right": "property",
              "text": "greg has eyes"
            },
            "doesable": true,
            "level": 2,
            "marker": "have",
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 12,
                "start": 0
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 12,
                "start": 9
              },
              "text": "eyes",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "eyes",
              "word": "eyes"
            },
            "range": {
              "end": 12,
              "start": 0
            },
            "sameWasProcessed": true,
            "text": "greg has eyes",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "word": "has"
          },
          "generatedParenthesized": "",
          "paraphrases": "greg has eyes",
          "paraphrasesParenthesized": "((greg) has (eyes))",
          "responses": [
            "",
            "yes"
          ]
        }
      ]
    },
    "paraphrases": [
      "greg has eyes",
      "does greg have eyes?"
    ],
    "paraphrasesParenthesized": [
      "((greg) has (eyes))",
      "((does (greg) have (eyes))?)"
    ],
    "query": "greg has eyes greg has eyes?",
    "responses": [
      "",
      "yes"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 26,
                "start": 14
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 26,
                "start": 14
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 26,
                "start": 14
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 27,
                "start": 14
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          1
        ],
        [
          "questionMark",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 12,
            "start": 0
          },
          "right": "property",
          "text": "greg has eyes"
        },
        "doesable": true,
        "isResponse": true,
        "level": 2,
        "marker": "have",
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 12,
            "start": 0
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 12,
            "start": 9
          },
          "text": "eyes",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "eyes",
          "word": "eyes"
        },
        "query": [
          "have"
        ],
        "range": {
          "end": 13,
          "start": 0
        },
        "text": "greg has eyes?",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "types": [
          "have"
        ],
        "verbatim": "There is no object named greg",
        "word": "has"
      }
    ],
    "generatedParenthesized": [
      "(There is no object named greg)"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "questionMark",
            0
          ],
          "ops": [
            [
              "questionMark",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 12,
                "start": 0
              },
              "right": "property",
              "text": "greg has eyes"
            },
            "doesable": true,
            "isResponse": true,
            "level": 2,
            "marker": "have",
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 12,
                "start": 0
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 12,
                "start": 9
              },
              "text": "eyes",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "eyes",
              "word": "eyes"
            },
            "query": [
              "have"
            ],
            "range": {
              "end": 13,
              "start": 0
            },
            "text": "greg has eyes?",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "types": [
              "have"
            ],
            "verbatim": "There is no object named greg",
            "word": "has"
          },
          "generatedParenthesized": "(There is no object named greg)",
          "paraphrases": "does greg have eyes?",
          "paraphrasesParenthesized": "((does (greg) have (eyes))?)",
          "responses": [
            "There is no object named greg"
          ]
        }
      ]
    },
    "paraphrases": [
      "does greg have eyes?"
    ],
    "paraphrasesParenthesized": [
      "((does (greg) have (eyes))?)"
    ],
    "query": "greg has eyes?",
    "responses": [
      "There is no object named greg"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 13,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 13,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 13,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 13,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 13,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 13,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "questionMark",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "have",
          1
        ],
        [
          "questionMark",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 12,
            "start": 0
          },
          "right": "property",
          "text": "greg has toes"
        },
        "doesable": true,
        "level": 2,
        "marker": "have",
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 12,
            "start": 0
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 12,
            "start": 9
          },
          "text": "toes",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "toes",
          "word": "toes"
        },
        "range": {
          "end": 12,
          "start": 0
        },
        "sameWasProcessed": true,
        "text": "greg has toes",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "word": "has"
      },
      {
        "context_index": 3,
        "dead": true,
        "do": {
          "left": "object",
          "range": {
            "end": 26,
            "start": 14
          },
          "right": "property",
          "text": ""
        },
        "doesable": true,
        "evalue": {
          "marker": "yesno",
          "value": false
        },
        "isResponse": true,
        "level": 2,
        "marker": "have",
        "number": "one",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "number": "one",
          "range": {
            "end": 26,
            "start": 14
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "property": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "range": {
            "end": 26,
            "start": 23
          },
          "text": "eyes",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "eyes",
          "word": "eyes"
        },
        "query": [
          "have"
        ],
        "range": {
          "end": 27,
          "start": 14
        },
        "text": "greg has eyes?",
        "topLevel": true,
        "touchedBy": [
          "properties#call10"
        ],
        "types": [
          "have"
        ],
        "word": "has"
      }
    ],
    "generatedParenthesized": [
      "",
      "(no)"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              0
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "have",
            0
          ],
          "ops": [
            [
              "have",
              0
            ],
            [
              "have",
              1
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ],
            [
              "have",
              1
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "have",
            1
          ],
          "ops": [
            [
              "have",
              1
            ],
            [
              "questionMark",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "questionMark",
            0
          ],
          "ops": [
            [
              "questionMark",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "greg"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "toe": {
                  "has": true,
                  "value": null
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 26,
                "start": 14
              },
              "right": "property",
              "text": ""
            },
            "doesable": true,
            "evalue": {
              "marker": "yesno",
              "value": false
            },
            "isResponse": true,
            "level": 2,
            "marker": "have",
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 26,
                "start": 14
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 26,
                "start": 23
              },
              "text": "eyes",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "eyes",
              "word": "eyes"
            },
            "query": [
              "have"
            ],
            "range": {
              "end": 27,
              "start": 14
            },
            "text": "greg has eyes?",
            "topLevel": true,
            "touchedBy": [
              "properties#call10"
            ],
            "types": [
              "have"
            ],
            "word": "has"
          },
          "generatedParenthesized": "(no)",
          "paraphrases": "does greg have eyes?",
          "paraphrasesParenthesized": "((does (greg) have (eyes))?)",
          "responses": [
            "",
            "no"
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "do": {
              "left": "object",
              "range": {
                "end": 12,
                "start": 0
              },
              "right": "property",
              "text": "greg has toes"
            },
            "doesable": true,
            "level": 2,
            "marker": "have",
            "number": "one",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "number": "one",
              "range": {
                "end": 12,
                "start": 0
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "property": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 12,
                "start": 9
              },
              "text": "toes",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "toes",
              "word": "toes"
            },
            "range": {
              "end": 12,
              "start": 0
            },
            "sameWasProcessed": true,
            "text": "greg has toes",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "word": "has"
          },
          "generatedParenthesized": "",
          "paraphrases": "greg has toes",
          "paraphrasesParenthesized": "((greg) has (toes))",
          "responses": [
            "",
            "no"
          ]
        }
      ]
    },
    "paraphrases": [
      "greg has toes",
      "does greg have eyes?"
    ],
    "paraphrasesParenthesized": [
      "((greg) has (toes))",
      "((does (greg) have (eyes))?)"
    ],
    "query": "greg has toes greg has eyes?",
    "responses": [
      "",
      "no"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 7,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 12,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 17,
                "start": 14
              }
            },
            {
              "marker": [
                "have",
                0
              ],
              "range": {
                "end": 21,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 26,
                "start": 23
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 26,
                "start": 14
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                1
              ],
              "range": {
                "end": 26,
                "start": 14
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 26,
                "start": 14
              }
            },
            {
              "marker": [
                "questionMark",
                0
              ],
              "range": {
                "end": 27,
                "start": 27
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 12,
                "start": 0
              }
            },
            {
              "marker": [
                "have",
                2
              ],
              "range": {
                "end": 27,
                "start": 14
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "possession",
          0
        ],
        [
          "possession",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "possession",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "possession",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "possession",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "possession",
          1
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 1,
        "marker": "property",
        "object": {
          "dead": true,
          "level": 1,
          "marker": "object",
          "range": {
            "end": 3,
            "start": 0
          },
          "text": "greg",
          "types": [
            "object"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "objects": [
          {
            "dead": true,
            "level": 1,
            "marker": "property",
            "range": {
              "end": 18,
              "start": 13
            },
            "text": "bumper",
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "bumper",
            "word": "bumper"
          },
          {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 9,
              "start": 7
            },
            "text": "car",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "car",
            "word": "car"
          },
          {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 3,
              "start": 0
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          }
        ],
        "possession": true,
        "range": {
          "end": 18,
          "start": 0
        },
        "text": "greg's car's bumper",
        "topLevel": true,
        "types": [
          "property"
        ],
        "unknown": true,
        "value": "bumper",
        "word": "bumper"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "possession",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "possession",
              1
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "possession",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 1,
            "marker": "property",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 3,
                "start": 0
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "objects": [
              {
                "dead": true,
                "level": 1,
                "marker": "property",
                "range": {
                  "end": 18,
                  "start": 13
                },
                "text": "bumper",
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "bumper",
                "word": "bumper"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 9,
                  "start": 7
                },
                "text": "car",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "car",
                "word": "car"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 3,
                  "start": 0
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "possession": true,
            "range": {
              "end": 18,
              "start": 0
            },
            "text": "greg's car's bumper",
            "topLevel": true,
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "bumper",
            "word": "bumper"
          },
          "generatedParenthesized": "",
          "paraphrases": "greg's car's bumper",
          "paraphrasesParenthesized": "(((greg)'s) ((car)'s) (bumper))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "greg's car's bumper"
    ],
    "paraphrasesParenthesized": [
      "(((greg)'s) ((car)'s) (bumper))"
    ],
    "query": "greg's car's bumper",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 11,
                "start": 10
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 18,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 11,
                "start": 10
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 18,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 11,
                "start": 10
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 18,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 11,
                "start": 10
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 18,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 11,
                "start": 7
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 18,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 5,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 11,
                "start": 7
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 18,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 5,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 18,
                "start": 7
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 18,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 4,
              "start": 0
            },
            "text": "alice",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "alice",
            "word": "alice"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 13,
                "start": 8
              },
              "text": "sister",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "sister",
              "word": "sister"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 4,
                "start": 0
              },
              "text": "alice",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "alice",
              "word": "alice"
            }
          ],
          "possession": true,
          "range": {
            "end": 22,
            "start": 0
          },
          "text": "alice's sister",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "sister",
          "word": "sister"
        },
        "range": {
          "end": 22,
          "start": 0
        },
        "text": "alice's sister is wendy",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 22,
            "start": 18
          },
          "text": "wendy",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "wendy",
          "word": "wendy"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "sister": [
              "wendy"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "wendy",
            "sister",
            "alice"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "wendy": [
              "sister"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "alice": {
                "sister": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 22,
                      "start": 18
                    },
                    "text": "wendy",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "wendy",
                    "word": "wendy"
                  }
                }
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "sister": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "wendy": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "sister": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 22,
                  "start": 18
                },
                "text": "wendy",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "wendy",
                "word": "wendy"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 4,
                  "start": 0
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "property",
                  "range": {
                    "end": 13,
                    "start": 8
                  },
                  "text": "sister",
                  "types": [
                    "property"
                  ],
                  "unknown": true,
                  "value": "sister",
                  "word": "sister"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 4,
                    "start": 0
                  },
                  "text": "alice",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "alice",
                  "word": "alice"
                }
              ],
              "possession": true,
              "range": {
                "end": 22,
                "start": 0
              },
              "text": "alice's sister",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "sister",
              "word": "sister"
            },
            "range": {
              "end": 22,
              "start": 0
            },
            "text": "alice's sister is wendy",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 22,
                "start": 18
              },
              "text": "wendy",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "wendy",
              "word": "wendy"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "alice's sister is wendy",
          "paraphrasesParenthesized": "((((alice)'s) (sister)) is (wendy))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "alice's sister is wendy"
    ],
    "paraphrasesParenthesized": [
      "((((alice)'s) (sister)) is (wendy))"
    ],
    "query": "alice's sister is wendy",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 13,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "possession",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          1
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 4,
              "start": 0
            },
            "text": "alice",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "alice",
            "word": "alice"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 13,
                "start": 8
              },
              "text": "sister",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "sister",
              "word": "sister"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 4,
                "start": 0
              },
              "text": "alice",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "alice",
              "word": "alice"
            }
          ],
          "possession": true,
          "range": {
            "end": 22,
            "start": 0
          },
          "text": "alice's sister",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "sister",
          "word": "sister"
        },
        "range": {
          "end": 22,
          "start": 0
        },
        "text": "alice's sister is wendy",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 22,
            "start": 18
          },
          "text": "wendy",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "wendy",
          "word": "wendy"
        },
        "word": "is"
      },
      {
        "context_index": 3,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 28,
              "start": 24
            },
            "text": "wendy",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "wendy",
            "word": "wendy"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 34,
                "start": 32
              },
              "text": "cat",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "cat",
              "word": "cat"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 28,
                "start": 24
              },
              "text": "wendy",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "wendy",
              "word": "wendy"
            }
          ],
          "possession": true,
          "range": {
            "end": 42,
            "start": 24
          },
          "text": "wendy's cat",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "cat",
          "word": "cat"
        },
        "range": {
          "end": 42,
          "start": 24
        },
        "text": "wendy's cat is cleo",
        "topLevel": true,
        "touchedBy": [
          "properties#call18"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 42,
            "start": 39
          },
          "text": "cleo",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "cleo",
          "word": "cleo"
        },
        "word": "is"
      },
      {
        "context_index": 1,
        "dead": true,
        "evalue": {
          "default": true,
          "focusable": [
            "two",
            "one"
          ],
          "marker": "is",
          "one": {
            "dead": true,
            "level": 1,
            "marker": "property",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 11,
                "start": 7
              },
              "text": "alice",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "alice",
              "word": "alice"
            },
            "objects": [
              {
                "dead": true,
                "level": 1,
                "marker": "property",
                "range": {
                  "end": 26,
                  "start": 24
                },
                "text": "cat",
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "cat",
                "word": "cat"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 20,
                  "start": 15
                },
                "text": "sister",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "sister",
                "word": "sister"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 11,
                  "start": 7
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              }
            ],
            "possession": true,
            "range": {
              "end": 26,
              "start": 7
            },
            "text": "alice's sister's cat",
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "cat",
            "word": "cat"
          },
          "two": {
            "dead": true,
            "evalue": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 42,
                "start": 39
              },
              "text": "cleo",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "cleo",
              "word": "cleo"
            },
            "focus": true,
            "focusable": [
              "object[0]"
            ],
            "instance": true,
            "level": 1,
            "marker": "property",
            "objects": [
              {
                "dead": true,
                "level": 1,
                "marker": "property",
                "range": {
                  "end": 26,
                  "start": 24
                },
                "text": "cat",
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "cat",
                "word": "cat"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 20,
                  "start": 15
                },
                "text": "sister",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "sister",
                "word": "sister"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 11,
                  "start": 7
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              }
            ],
            "possession": true,
            "range": {
              "end": 26,
              "start": 7
            },
            "text": "alice's sister's cat",
            "touchedBy": [
              "properties#call3",
              "properties#call2"
            ],
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "cat",
            "word": "cat"
          },
          "word": "is"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "modifiers": [
          ],
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 26,
            "start": 0
          },
          "text": "who",
          "types": [
            "what"
          ],
          "word": "who"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 26,
          "start": 0
        },
        "text": "who is alice's sister's cat",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 11,
              "start": 7
            },
            "text": "alice",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "alice",
            "word": "alice"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 26,
                "start": 24
              },
              "text": "cat",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "cat",
              "word": "cat"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 20,
                "start": 15
              },
              "text": "sister",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "sister",
              "word": "sister"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 11,
                "start": 7
              },
              "text": "alice",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "alice",
              "word": "alice"
            }
          ],
          "possession": true,
          "range": {
            "end": 26,
            "start": 7
          },
          "text": "alice's sister's cat",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "cat",
          "word": "cat"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      "(((((alice)'s) ((sister)'s) (cat)) is ((cleo))))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              1
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 13,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 14,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 17,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 18,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 19,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 20,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 21,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ]
          ]
        },
        {
          "counter": 22,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 23,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              1
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 24,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 25,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 26,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "cat": [
              "cleo"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "sister": [
              "wendy"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "wendy",
            "sister",
            "alice",
            "cleo",
            "cat"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "cleo": [
              "cat"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "wendy": [
              "sister"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "alice": {
                "sister": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 22,
                      "start": 18
                    },
                    "text": "wendy",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "wendy",
                    "word": "wendy"
                  }
                }
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "cat": {
              },
              "cleo": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "sister": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "wendy": {
                "cat": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 42,
                      "start": 39
                    },
                    "text": "cleo",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "cleo",
                    "word": "cleo"
                  }
                }
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "cat": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 42,
                  "start": 39
                },
                "text": "cleo",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "cleo",
                "word": "cleo"
              }
            ],
            "sister": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 22,
                  "start": 18
                },
                "text": "wendy",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "wendy",
                "word": "wendy"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "evalue": {
              "default": true,
              "focusable": [
                "two",
                "one"
              ],
              "marker": "is",
              "one": {
                "dead": true,
                "level": 1,
                "marker": "property",
                "object": {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 11,
                    "start": 7
                  },
                  "text": "alice",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "alice",
                  "word": "alice"
                },
                "objects": [
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "property",
                    "range": {
                      "end": 26,
                      "start": 24
                    },
                    "text": "cat",
                    "types": [
                      "property"
                    ],
                    "unknown": true,
                    "value": "cat",
                    "word": "cat"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 20,
                      "start": 15
                    },
                    "text": "sister",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "sister",
                    "word": "sister"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 11,
                      "start": 7
                    },
                    "text": "alice",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "alice",
                    "word": "alice"
                  }
                ],
                "possession": true,
                "range": {
                  "end": 26,
                  "start": 7
                },
                "text": "alice's sister's cat",
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "cat",
                "word": "cat"
              },
              "two": {
                "dead": true,
                "evalue": {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 42,
                    "start": 39
                  },
                  "text": "cleo",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "cleo",
                  "word": "cleo"
                },
                "focus": true,
                "focusable": [
                  "object[0]"
                ],
                "instance": true,
                "level": 1,
                "marker": "property",
                "objects": [
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "property",
                    "range": {
                      "end": 26,
                      "start": 24
                    },
                    "text": "cat",
                    "types": [
                      "property"
                    ],
                    "unknown": true,
                    "value": "cat",
                    "word": "cat"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 20,
                      "start": 15
                    },
                    "text": "sister",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "sister",
                    "word": "sister"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 11,
                      "start": 7
                    },
                    "text": "alice",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "alice",
                    "word": "alice"
                  }
                ],
                "possession": true,
                "range": {
                  "end": 26,
                  "start": 7
                },
                "text": "alice's sister's cat",
                "touchedBy": [
                  "properties#call3",
                  "properties#call2"
                ],
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "cat",
                "word": "cat"
              },
              "word": "is"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "modifiers": [
              ],
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 26,
                "start": 0
              },
              "text": "who",
              "types": [
                "what"
              ],
              "word": "who"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 26,
              "start": 0
            },
            "text": "who is alice's sister's cat",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 11,
                  "start": 7
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "property",
                  "range": {
                    "end": 26,
                    "start": 24
                  },
                  "text": "cat",
                  "types": [
                    "property"
                  ],
                  "unknown": true,
                  "value": "cat",
                  "word": "cat"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 20,
                    "start": 15
                  },
                  "text": "sister",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "sister",
                  "word": "sister"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 11,
                    "start": 7
                  },
                  "text": "alice",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "alice",
                  "word": "alice"
                }
              ],
              "possession": true,
              "range": {
                "end": 26,
                "start": 7
              },
              "text": "alice's sister's cat",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "cat",
              "word": "cat"
            },
            "word": "is"
          },
          "generatedParenthesized": "(((((alice)'s) ((sister)'s) (cat)) is ((cleo))))",
          "paraphrases": "who is alice's sister's cat?",
          "paraphrasesParenthesized": "(((who) is (((alice)'s) ((sister)'s) (cat)))?)",
          "responses": [
            "alice's sister's cat is cleo"
          ]
        },
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 28,
                  "start": 24
                },
                "text": "wendy",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "wendy",
                "word": "wendy"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "property",
                  "range": {
                    "end": 34,
                    "start": 32
                  },
                  "text": "cat",
                  "types": [
                    "property"
                  ],
                  "unknown": true,
                  "value": "cat",
                  "word": "cat"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 28,
                    "start": 24
                  },
                  "text": "wendy",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "wendy",
                  "word": "wendy"
                }
              ],
              "possession": true,
              "range": {
                "end": 42,
                "start": 24
              },
              "text": "wendy's cat",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "cat",
              "word": "cat"
            },
            "range": {
              "end": 42,
              "start": 24
            },
            "text": "wendy's cat is cleo",
            "topLevel": true,
            "touchedBy": [
              "properties#call18"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 42,
                "start": 39
              },
              "text": "cleo",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "cleo",
              "word": "cleo"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "wendy's cat is cleo",
          "paraphrasesParenthesized": "((((wendy)'s) (cat)) is (cleo))",
          "responses": [
            "",
            ""
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 4,
                  "start": 0
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "property",
                  "range": {
                    "end": 13,
                    "start": 8
                  },
                  "text": "sister",
                  "types": [
                    "property"
                  ],
                  "unknown": true,
                  "value": "sister",
                  "word": "sister"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 4,
                    "start": 0
                  },
                  "text": "alice",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "alice",
                  "word": "alice"
                }
              ],
              "possession": true,
              "range": {
                "end": 22,
                "start": 0
              },
              "text": "alice's sister",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "sister",
              "word": "sister"
            },
            "range": {
              "end": 22,
              "start": 0
            },
            "text": "alice's sister is wendy",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 22,
                "start": 18
              },
              "text": "wendy",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "wendy",
              "word": "wendy"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "alice's sister is wendy",
          "paraphrasesParenthesized": "((((alice)'s) (sister)) is (wendy))",
          "responses": [
            "",
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "alice's sister is wendy",
      "wendy's cat is cleo",
      "who is alice's sister's cat?"
    ],
    "paraphrasesParenthesized": [
      "((((alice)'s) (sister)) is (wendy))",
      "((((wendy)'s) (cat)) is (cleo))",
      "(((who) is (((alice)'s) ((sister)'s) (cat)))?)"
    ],
    "query": "alice's sister is wendy wendy's cat is cleo\\nwho is alice's sister's cat",
    "responses": [
      "",
      "",
      "alice's sister's cat is cleo"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 30,
                "start": 24
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 30,
                "start": 24
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 34,
                "start": 24
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 13,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 34,
                "start": 24
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 12,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 34,
                "start": 24
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 13,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 42,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 14,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 42,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 15,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 42,
                "start": 24
              }
            }
          ]
        }
      ],
      [
        {
          "counter": 17,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 11,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 15
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 18,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 11,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 15
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 19,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 11,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 15
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 26,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 20,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 11,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 15
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 26,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 21,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 11,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 15
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 26,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 22,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 11,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 22,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 26,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 23,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 13,
                "start": 7
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 22,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 26,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 24,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 13,
                "start": 7
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 26,
                "start": 15
              }
            }
          ]
        },
        {
          "counter": 25,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 26,
                "start": 7
              }
            }
          ]
        },
        {
          "counter": 26,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 26,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 27,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 26,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 4,
              "start": 0
            },
            "text": "alice",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "alice",
            "word": "alice"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 13,
                "start": 8
              },
              "text": "sister",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "sister",
              "word": "sister"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 4,
                "start": 0
              },
              "text": "alice",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "alice",
              "word": "alice"
            }
          ],
          "possession": true,
          "range": {
            "end": 22,
            "start": 0
          },
          "text": "alice's sister",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "sister",
          "word": "sister"
        },
        "range": {
          "end": 22,
          "start": 0
        },
        "text": "alice's sister is wendy",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 22,
            "start": 18
          },
          "text": "wendy",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "wendy",
          "word": "wendy"
        },
        "word": "is"
      },
      {
        "context_index": 3,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 28,
              "start": 24
            },
            "text": "wendy",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "wendy",
            "word": "wendy"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 34,
                "start": 32
              },
              "text": "cat",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "cat",
              "word": "cat"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 28,
                "start": 24
              },
              "text": "wendy",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "wendy",
              "word": "wendy"
            }
          ],
          "possession": true,
          "range": {
            "end": 42,
            "start": 24
          },
          "text": "wendy's cat",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "cat",
          "word": "cat"
        },
        "range": {
          "end": 42,
          "start": 24
        },
        "text": "wendy's cat is cleo",
        "topLevel": true,
        "touchedBy": [
          "properties#call18"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 42,
            "start": 39
          },
          "text": "cleo",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "cleo",
          "word": "cleo"
        },
        "word": "is"
      },
      {
        "context_index": 1,
        "dead": true,
        "evalue": {
          "default": true,
          "focusable": [
            "two",
            "one"
          ],
          "marker": "is",
          "one": {
            "concept": true,
            "dead": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 36,
                "start": 32
              },
              "text": "alice",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "alice",
              "word": "alice"
            },
            "objects": [
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 13,
                  "start": 7
                },
                "text": "the cat",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "cat",
                "wantsValue": true,
                "word": "cat"
              },
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "object",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 27,
                  "start": 18
                },
                "text": "the sister",
                "types": [
                  "object",
                  "unknown"
                ],
                "unknown": true,
                "value": "sister",
                "wantsValue": true,
                "word": "sister"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 36,
                  "start": 32
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 36,
              "start": 7
            },
            "text": "the cat of the sister of alice",
            "types": [
              "property",
              "unknown"
            ],
            "unknown": true,
            "value": "cat",
            "wantsValue": true,
            "word": "cat"
          },
          "two": {
            "concept": true,
            "dead": true,
            "determiner": "the",
            "evalue": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 42,
                "start": 39
              },
              "text": "cleo",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "cleo",
              "word": "cleo"
            },
            "focus": true,
            "focusable": [
              "object[0]"
            ],
            "focusableForPhrase": true,
            "instance": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "objects": [
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 13,
                  "start": 7
                },
                "text": "the cat",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "cat",
                "wantsValue": true,
                "word": "cat"
              },
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "object",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 27,
                  "start": 18
                },
                "text": "the sister",
                "types": [
                  "object",
                  "unknown"
                ],
                "unknown": true,
                "value": "sister",
                "wantsValue": true,
                "word": "sister"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 36,
                  "start": 32
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 36,
              "start": 7
            },
            "text": "the cat of the sister of alice",
            "touchedBy": [
              "properties#call3",
              "properties#call2"
            ],
            "types": [
              "property",
              "unknown"
            ],
            "unknown": true,
            "value": "cat",
            "wantsValue": true,
            "word": "cat"
          },
          "word": "is"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "modifiers": [
          ],
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 36,
            "start": 0
          },
          "text": "who",
          "types": [
            "what"
          ],
          "word": "who"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 36,
          "start": 0
        },
        "text": "who is the cat of the sister of alice",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 36,
              "start": 32
            },
            "text": "alice",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "alice",
            "word": "alice"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 13,
                "start": 7
              },
              "text": "the cat",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "cat",
              "wantsValue": true,
              "word": "cat"
            },
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "object",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 27,
                "start": 18
              },
              "text": "the sister",
              "types": [
                "object",
                "unknown"
              ],
              "unknown": true,
              "value": "sister",
              "wantsValue": true,
              "word": "sister"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 36,
                "start": 32
              },
              "text": "alice",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "alice",
              "word": "alice"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 36,
            "start": 7
          },
          "text": "the cat of the sister of alice",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "cat",
          "wantsValue": true,
          "word": "cat"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      "((((the (cat)) of (the (sister)) of (alice)) is ((cleo))))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              1
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 13,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 14,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 17,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 18,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 19,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 20,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 21,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 22,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 23,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 24,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 25,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 26,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 27,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 28,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "cat": [
              "cleo"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "sister": [
              "wendy"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "wendy",
            "sister",
            "alice",
            "cleo",
            "cat"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "cleo": [
              "cat"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "wendy": [
              "sister"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "alice": {
                "sister": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 22,
                      "start": 18
                    },
                    "text": "wendy",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "wendy",
                    "word": "wendy"
                  }
                }
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "cat": {
              },
              "cleo": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "sister": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "wendy": {
                "cat": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 42,
                      "start": 39
                    },
                    "text": "cleo",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "cleo",
                    "word": "cleo"
                  }
                }
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "cat": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 42,
                  "start": 39
                },
                "text": "cleo",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "cleo",
                "word": "cleo"
              }
            ],
            "sister": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 22,
                  "start": 18
                },
                "text": "wendy",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "wendy",
                "word": "wendy"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "evalue": {
              "default": true,
              "focusable": [
                "two",
                "one"
              ],
              "marker": "is",
              "one": {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "object": {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 36,
                    "start": 32
                  },
                  "text": "alice",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "alice",
                  "word": "alice"
                },
                "objects": [
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "property",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 13,
                      "start": 7
                    },
                    "text": "the cat",
                    "types": [
                      "property",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "cat",
                    "wantsValue": true,
                    "word": "cat"
                  },
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "object",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 27,
                      "start": 18
                    },
                    "text": "the sister",
                    "types": [
                      "object",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "sister",
                    "wantsValue": true,
                    "word": "sister"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 36,
                      "start": 32
                    },
                    "text": "alice",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "alice",
                    "word": "alice"
                  }
                ],
                "pullFromContext": true,
                "range": {
                  "end": 36,
                  "start": 7
                },
                "text": "the cat of the sister of alice",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "cat",
                "wantsValue": true,
                "word": "cat"
              },
              "two": {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "evalue": {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 42,
                    "start": 39
                  },
                  "text": "cleo",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "cleo",
                  "word": "cleo"
                },
                "focus": true,
                "focusable": [
                  "object[0]"
                ],
                "focusableForPhrase": true,
                "instance": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "objects": [
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "property",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 13,
                      "start": 7
                    },
                    "text": "the cat",
                    "types": [
                      "property",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "cat",
                    "wantsValue": true,
                    "word": "cat"
                  },
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "object",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 27,
                      "start": 18
                    },
                    "text": "the sister",
                    "types": [
                      "object",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "sister",
                    "wantsValue": true,
                    "word": "sister"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 36,
                      "start": 32
                    },
                    "text": "alice",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "alice",
                    "word": "alice"
                  }
                ],
                "pullFromContext": true,
                "range": {
                  "end": 36,
                  "start": 7
                },
                "text": "the cat of the sister of alice",
                "touchedBy": [
                  "properties#call3",
                  "properties#call2"
                ],
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "cat",
                "wantsValue": true,
                "word": "cat"
              },
              "word": "is"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "modifiers": [
              ],
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 36,
                "start": 0
              },
              "text": "who",
              "types": [
                "what"
              ],
              "word": "who"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 36,
              "start": 0
            },
            "text": "who is the cat of the sister of alice",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 36,
                  "start": 32
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 13,
                    "start": 7
                  },
                  "text": "the cat",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "cat",
                  "wantsValue": true,
                  "word": "cat"
                },
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "object",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 27,
                    "start": 18
                  },
                  "text": "the sister",
                  "types": [
                    "object",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "sister",
                  "wantsValue": true,
                  "word": "sister"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 36,
                    "start": 32
                  },
                  "text": "alice",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "alice",
                  "word": "alice"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 36,
                "start": 7
              },
              "text": "the cat of the sister of alice",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "cat",
              "wantsValue": true,
              "word": "cat"
            },
            "word": "is"
          },
          "generatedParenthesized": "((((the (cat)) of (the (sister)) of (alice)) is ((cleo))))",
          "paraphrases": "who is the cat of the sister of alice?",
          "paraphrasesParenthesized": "(((who) is ((the (cat)) of (the (sister)) of (alice)))?)",
          "responses": [
            "the cat of the sister of alice is cleo"
          ]
        },
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 28,
                  "start": 24
                },
                "text": "wendy",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "wendy",
                "word": "wendy"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "property",
                  "range": {
                    "end": 34,
                    "start": 32
                  },
                  "text": "cat",
                  "types": [
                    "property"
                  ],
                  "unknown": true,
                  "value": "cat",
                  "word": "cat"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 28,
                    "start": 24
                  },
                  "text": "wendy",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "wendy",
                  "word": "wendy"
                }
              ],
              "possession": true,
              "range": {
                "end": 42,
                "start": 24
              },
              "text": "wendy's cat",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "cat",
              "word": "cat"
            },
            "range": {
              "end": 42,
              "start": 24
            },
            "text": "wendy's cat is cleo",
            "topLevel": true,
            "touchedBy": [
              "properties#call18"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 42,
                "start": 39
              },
              "text": "cleo",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "cleo",
              "word": "cleo"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "wendy's cat is cleo",
          "paraphrasesParenthesized": "((((wendy)'s) (cat)) is (cleo))",
          "responses": [
            "",
            ""
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 4,
                  "start": 0
                },
                "text": "alice",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "alice",
                "word": "alice"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "property",
                  "range": {
                    "end": 13,
                    "start": 8
                  },
                  "text": "sister",
                  "types": [
                    "property"
                  ],
                  "unknown": true,
                  "value": "sister",
                  "word": "sister"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 4,
                    "start": 0
                  },
                  "text": "alice",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "alice",
                  "word": "alice"
                }
              ],
              "possession": true,
              "range": {
                "end": 22,
                "start": 0
              },
              "text": "alice's sister",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "sister",
              "word": "sister"
            },
            "range": {
              "end": 22,
              "start": 0
            },
            "text": "alice's sister is wendy",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 22,
                "start": 18
              },
              "text": "wendy",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "wendy",
              "word": "wendy"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "alice's sister is wendy",
          "paraphrasesParenthesized": "((((alice)'s) (sister)) is (wendy))",
          "responses": [
            "",
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "alice's sister is wendy",
      "wendy's cat is cleo",
      "who is the cat of the sister of alice?"
    ],
    "paraphrasesParenthesized": [
      "((((alice)'s) (sister)) is (wendy))",
      "((((wendy)'s) (cat)) is (cleo))",
      "(((who) is ((the (cat)) of (the (sister)) of (alice)))?)"
    ],
    "query": "alice's sister is wendy wendy's cat is cleo\\nwho is the cat of the sister of alice",
    "responses": [
      "",
      "",
      "the cat of the sister of alice is cleo"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 24
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 30,
                "start": 24
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 30,
                "start": 24
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 34,
                "start": 32
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 34,
                "start": 24
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 13,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 18
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 34,
                "start": 24
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 12,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 34,
                "start": 24
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 37,
                "start": 36
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 42,
                "start": 39
              }
            }
          ]
        },
        {
          "counter": 13,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 42,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 14,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 42,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 15,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 42,
                "start": 24
              }
            }
          ]
        }
      ],
      [
        {
          "counter": 17,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 13,
                "start": 11
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 20,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 27,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 36,
                "start": 32
              }
            }
          ]
        },
        {
          "counter": 18,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 11
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 20,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 27,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 36,
                "start": 32
              }
            }
          ]
        },
        {
          "counter": 19,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 11
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 20,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 27,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 36,
                "start": 32
              }
            }
          ]
        },
        {
          "counter": 20,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 11
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 20,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 27,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 32
              }
            }
          ]
        },
        {
          "counter": 21,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 9,
                "start": 7
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 11
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 20,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 27,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 32
              }
            }
          ]
        },
        {
          "counter": 22,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 7
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 20,
                "start": 18
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 27,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 32
              }
            }
          ]
        },
        {
          "counter": 23,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 7
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 16,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 27,
                "start": 18
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 32
              }
            }
          ]
        },
        {
          "counter": 24,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 7
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 27,
                "start": 15
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 30,
                "start": 29
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 32
              }
            }
          ]
        },
        {
          "counter": 25,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 7
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 27,
                "start": 15
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 36,
                "start": 29
              }
            }
          ]
        },
        {
          "counter": 26,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 27,
                "start": 7
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 36,
                "start": 29
              }
            }
          ]
        },
        {
          "counter": 27,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 5,
                "start": 4
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 36,
                "start": 7
              }
            }
          ]
        },
        {
          "counter": 28,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 36,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 29,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 36,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "object",
          0
        ],
        [
          "property",
          0
        ],
        [
          "propertyOf",
          0
        ]
      ],
      [
        [
          "object",
          0
        ],
        [
          "propertyOf",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "default": true,
        "level": 1,
        "marker": "property",
        "object": {
          "dead": true,
          "default": true,
          "level": 1,
          "marker": "object",
          "range": {
            "end": 17,
            "start": 12
          },
          "text": "object",
          "types": [
            "object"
          ],
          "value": "object",
          "word": "object"
        },
        "objects": [
          {
            "dead": true,
            "default": true,
            "level": 1,
            "marker": "property",
            "range": {
              "end": 7,
              "start": 0
            },
            "text": "property",
            "types": [
              "property"
            ],
            "value": "property",
            "word": "property"
          },
          {
            "dead": true,
            "default": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 17,
              "start": 12
            },
            "text": "object",
            "types": [
              "object"
            ],
            "value": "object",
            "word": "object"
          }
        ],
        "range": {
          "end": 17,
          "start": 0
        },
        "text": "property of object",
        "topLevel": true,
        "types": [
          "property"
        ],
        "value": "property",
        "word": "property"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "property",
            0
          ],
          "ops": [
            [
              "object",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "object",
            0
          ],
          "ops": [
            [
              "object",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "propertyOf",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "default": true,
            "level": 1,
            "marker": "property",
            "object": {
              "dead": true,
              "default": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 17,
                "start": 12
              },
              "text": "object",
              "types": [
                "object"
              ],
              "value": "object",
              "word": "object"
            },
            "objects": [
              {
                "dead": true,
                "default": true,
                "level": 1,
                "marker": "property",
                "range": {
                  "end": 7,
                  "start": 0
                },
                "text": "property",
                "types": [
                  "property"
                ],
                "value": "property",
                "word": "property"
              },
              {
                "dead": true,
                "default": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 17,
                  "start": 12
                },
                "text": "object",
                "types": [
                  "object"
                ],
                "value": "object",
                "word": "object"
              }
            ],
            "range": {
              "end": 17,
              "start": 0
            },
            "text": "property of object",
            "topLevel": true,
            "types": [
              "property"
            ],
            "value": "property",
            "word": "property"
          },
          "generatedParenthesized": "",
          "paraphrases": "property of object",
          "paraphrasesParenthesized": "((property) of (object))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "property of object"
    ],
    "paraphrasesParenthesized": [
      "((property) of (object))"
    ],
    "query": "property of object",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 17,
                "start": 12
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 17,
                "start": 12
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "object",
                1
              ],
              "range": {
                "end": 17,
                "start": 12
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 17,
                "start": 9
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 17,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "property",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "property",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "property",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 14,
              "start": 11
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 6,
                "start": 0
              },
              "text": "the age",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 14,
                "start": 11
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 20,
            "start": 0
          },
          "text": "the age of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "age",
          "wantsValue": true,
          "word": "age"
        },
        "range": {
          "end": 20,
          "start": 0
        },
        "text": "the age of greg is 23",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 20,
            "start": 19
          },
          "text": "23",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "23",
          "word": "23"
        },
        "word": "is"
      },
      {
        "context_index": 3,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 43,
              "start": 40
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 35,
                "start": 22
              },
              "text": "the profession",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "profession",
              "wantsValue": true,
              "word": "profession"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 43,
                "start": 40
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 57,
            "start": 22
          },
          "text": "the profession of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "profession",
          "wantsValue": true,
          "word": "profession"
        },
        "range": {
          "end": 57,
          "start": 22
        },
        "text": "the profession of greg is programmer",
        "topLevel": true,
        "touchedBy": [
          "properties#call18"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 57,
            "start": 48
          },
          "text": "programmer",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "programmer",
          "word": "programmer"
        },
        "word": "is"
      },
      {
        "context_index": 5,
        "dead": true,
        "evalue": {
          "default": true,
          "focusable": [
            "two",
            "one"
          ],
          "marker": "is",
          "number": "many",
          "one": {
            "concept": true,
            "dead": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 89,
                "start": 86
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "objects": [
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 81,
                  "start": 68
                },
                "text": "the properties",
                "types": [
                  "property"
                ],
                "value": "property",
                "wantsValue": true,
                "word": "properties"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 89,
                  "start": 86
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 89,
              "start": 68
            },
            "text": "the properties of greg",
            "types": [
              "property"
            ],
            "value": "property",
            "wantsValue": true,
            "word": "properties"
          },
          "two": {
            "concept": true,
            "dead": true,
            "determiner": "the",
            "evalue": {
              "marker": "list",
              "value": [
                "age: 23",
                "profession: programmer"
              ]
            },
            "focus": true,
            "focusable": [
              "object[0]"
            ],
            "focusableForPhrase": true,
            "instance": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "objects": [
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 81,
                  "start": 68
                },
                "text": "the properties",
                "types": [
                  "property"
                ],
                "value": "property",
                "wantsValue": true,
                "word": "properties"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 89,
                  "start": 86
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 89,
              "start": 68
            },
            "text": "the properties of greg",
            "touchedBy": [
              "properties#call35",
              "properties#call34"
            ],
            "types": [
              "property"
            ],
            "value": "property",
            "wantsValue": true,
            "word": "properties"
          },
          "word": "are"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "many",
        "one": {
          "dead": true,
          "default": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "number": "many",
          "query": [
            "what"
          ],
          "range": {
            "end": 89,
            "start": 59
          },
          "text": "what",
          "types": [
            "what"
          ],
          "value": "what",
          "word": "what"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 89,
          "start": 59
        },
        "text": "what are the properties of greg",
        "topLevel": true,
        "touchedBy": [
          "properties#call34"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 89,
              "start": 86
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 81,
                "start": 68
              },
              "text": "the properties",
              "types": [
                "property"
              ],
              "value": "property",
              "wantsValue": true,
              "word": "properties"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 89,
                "start": 86
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 89,
            "start": 68
          },
          "text": "the properties of greg",
          "types": [
            "property"
          ],
          "value": "property",
          "wantsValue": true,
          "word": "properties"
        },
        "word": "are"
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      "((((the (properties)) of (greg)) are ((age: 23 and profession: programmer))))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "property",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 13,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 14,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 15,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              1
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 16,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ],
            [
              "propertyOf",
              1
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 17,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 18,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 19,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 20,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 21,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 22,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 23,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 24,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "age": [
              "23"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "profession": [
              "programmer"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "23",
            "age",
            "greg",
            "programmer",
            "profession"
          ],
          "parents": {
            "23": [
              "age"
            ],
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "programmer": [
              "profession"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "23": {
              },
              "a": {
              },
              "adjective": {
              },
              "age": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "age": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 20,
                      "start": 19
                    },
                    "text": "23",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "23",
                    "word": "23"
                  }
                },
                "profession": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 57,
                      "start": 48
                    },
                    "text": "programmer",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "programmer",
                    "word": "programmer"
                  }
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "profession": {
              },
              "programmer": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "age": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 20,
                  "start": 19
                },
                "text": "23",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "23",
                "word": "23"
              }
            ],
            "profession": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 57,
                  "start": 48
                },
                "text": "programmer",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "programmer",
                "word": "programmer"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 5,
            "dead": true,
            "evalue": {
              "default": true,
              "focusable": [
                "two",
                "one"
              ],
              "marker": "is",
              "number": "many",
              "one": {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "object": {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 89,
                    "start": 86
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                },
                "objects": [
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "property",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 81,
                      "start": 68
                    },
                    "text": "the properties",
                    "types": [
                      "property"
                    ],
                    "value": "property",
                    "wantsValue": true,
                    "word": "properties"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 89,
                      "start": 86
                    },
                    "text": "greg",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                ],
                "pullFromContext": true,
                "range": {
                  "end": 89,
                  "start": 68
                },
                "text": "the properties of greg",
                "types": [
                  "property"
                ],
                "value": "property",
                "wantsValue": true,
                "word": "properties"
              },
              "two": {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "evalue": {
                  "marker": "list",
                  "value": [
                    "age: 23",
                    "profession: programmer"
                  ]
                },
                "focus": true,
                "focusable": [
                  "object[0]"
                ],
                "focusableForPhrase": true,
                "instance": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "objects": [
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "property",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 81,
                      "start": 68
                    },
                    "text": "the properties",
                    "types": [
                      "property"
                    ],
                    "value": "property",
                    "wantsValue": true,
                    "word": "properties"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 89,
                      "start": 86
                    },
                    "text": "greg",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                ],
                "pullFromContext": true,
                "range": {
                  "end": 89,
                  "start": 68
                },
                "text": "the properties of greg",
                "touchedBy": [
                  "properties#call35",
                  "properties#call34"
                ],
                "types": [
                  "property"
                ],
                "value": "property",
                "wantsValue": true,
                "word": "properties"
              },
              "word": "are"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "many",
            "one": {
              "dead": true,
              "default": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "number": "many",
              "query": [
                "what"
              ],
              "range": {
                "end": 89,
                "start": 59
              },
              "text": "what",
              "types": [
                "what"
              ],
              "value": "what",
              "word": "what"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 89,
              "start": 59
            },
            "text": "what are the properties of greg",
            "topLevel": true,
            "touchedBy": [
              "properties#call34"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 89,
                  "start": 86
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 81,
                    "start": 68
                  },
                  "text": "the properties",
                  "types": [
                    "property"
                  ],
                  "value": "property",
                  "wantsValue": true,
                  "word": "properties"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 89,
                    "start": 86
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 89,
                "start": 68
              },
              "text": "the properties of greg",
              "types": [
                "property"
              ],
              "value": "property",
              "wantsValue": true,
              "word": "properties"
            },
            "word": "are"
          },
          "generatedParenthesized": "((((the (properties)) of (greg)) are ((age: 23 and profession: programmer))))",
          "paraphrases": "what are the properties of greg?",
          "paraphrasesParenthesized": "(((what) are ((the (properties)) of (greg)))?)",
          "responses": [
            "",
            "",
            "the properties of greg are age: 23 and profession: programmer"
          ]
        },
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 43,
                  "start": 40
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 35,
                    "start": 22
                  },
                  "text": "the profession",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "profession",
                  "wantsValue": true,
                  "word": "profession"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 43,
                    "start": 40
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 57,
                "start": 22
              },
              "text": "the profession of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "profession",
              "wantsValue": true,
              "word": "profession"
            },
            "range": {
              "end": 57,
              "start": 22
            },
            "text": "the profession of greg is programmer",
            "topLevel": true,
            "touchedBy": [
              "properties#call18"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 57,
                "start": 48
              },
              "text": "programmer",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "programmer",
              "word": "programmer"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "the profession of greg is programmer",
          "paraphrasesParenthesized": "(((the (profession)) of (greg)) is (programmer))",
          "responses": [
            "",
            "",
            "the properties of greg are age: 23 and profession: programmer"
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 14,
                  "start": 11
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 6,
                    "start": 0
                  },
                  "text": "the age",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "age",
                  "wantsValue": true,
                  "word": "age"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 14,
                    "start": 11
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "the age of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "the age of greg is 23",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 19
              },
              "text": "23",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "23",
              "word": "23"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "the age of greg is 23",
          "paraphrasesParenthesized": "(((the (age)) of (greg)) is (23))",
          "responses": [
            "",
            "",
            "the properties of greg are age: 23 and profession: programmer"
          ]
        }
      ]
    },
    "paraphrases": [
      "the age of greg is 23",
      "the profession of greg is programmer",
      "what are the properties of greg?"
    ],
    "paraphrasesParenthesized": [
      "(((the (age)) of (greg)) is (23))",
      "(((the (profession)) of (greg)) is (programmer))",
      "(((what) are ((the (properties)) of (greg)))?)"
    ],
    "query": "the age of greg is 23 the profession of greg is programmer what are the properties of greg",
    "responses": [
      "",
      "",
      "the properties of greg are age: 23 and profession: programmer"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 24,
                "start": 22
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 26
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 12,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 70,
                "start": 68
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 72
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 13,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 68
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 14,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 38,
                "start": 37
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 43,
                "start": 40
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 68
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 15,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 43,
                "start": 37
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 68
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 84,
                "start": 83
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 89,
                "start": 86
              }
            }
          ]
        },
        {
          "counter": 16,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 43,
                "start": 37
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 68
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 89,
                "start": 83
              }
            }
          ]
        },
        {
          "counter": 17,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 35,
                "start": 22
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 43,
                "start": 37
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 68
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 89,
                "start": 83
              }
            }
          ]
        },
        {
          "counter": 18,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 43,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 81,
                "start": 68
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 89,
                "start": 83
              }
            }
          ]
        },
        {
          "counter": 19,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 43,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 89,
                "start": 68
              }
            }
          ]
        },
        {
          "counter": 20,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 43,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 46,
                "start": 45
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 48
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 89,
                "start": 68
              }
            }
          ]
        },
        {
          "counter": 21,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 57,
                "start": 22
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 62,
                "start": 59
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 66,
                "start": 64
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 89,
                "start": 68
              }
            }
          ]
        },
        {
          "counter": 22,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 57,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 89,
                "start": 59
              }
            }
          ]
        },
        {
          "counter": 23,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 57,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 89,
                "start": 59
              }
            }
          ]
        },
        {
          "counter": 24,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 57,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 89,
                "start": 59
              }
            }
          ]
        },
        {
          "counter": 25,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 57,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 89,
                "start": 59
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "possession",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "possession",
          1
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 14,
              "start": 11
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 6,
                "start": 0
              },
              "text": "the age",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 14,
                "start": 11
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 20,
            "start": 0
          },
          "text": "the age of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "age",
          "wantsValue": true,
          "word": "age"
        },
        "range": {
          "end": 20,
          "start": 0
        },
        "text": "the age of greg is 23",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 20,
            "start": 19
          },
          "text": "23",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "23",
          "word": "23"
        },
        "word": "is"
      },
      {
        "context_index": 3,
        "dead": true,
        "evalue": {
          "default": true,
          "focusable": [
            "two",
            "one"
          ],
          "marker": "is",
          "one": {
            "dead": true,
            "level": 1,
            "marker": "property",
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 33,
                "start": 30
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "objects": [
              {
                "dead": true,
                "level": 1,
                "marker": "property",
                "range": {
                  "end": 39,
                  "start": 37
                },
                "text": "age",
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "age",
                "word": "age"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 33,
                  "start": 30
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "possession": true,
            "range": {
              "end": 39,
              "start": 30
            },
            "text": "greg's age",
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "age",
            "word": "age"
          },
          "two": {
            "dead": true,
            "evalue": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 19
              },
              "text": "23",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "23",
              "word": "23"
            },
            "focus": true,
            "focusable": [
              "object[0]"
            ],
            "instance": true,
            "level": 1,
            "marker": "property",
            "objects": [
              {
                "dead": true,
                "level": 1,
                "marker": "property",
                "range": {
                  "end": 39,
                  "start": 37
                },
                "text": "age",
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "age",
                "word": "age"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 33,
                  "start": 30
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "possession": true,
            "range": {
              "end": 39,
              "start": 30
            },
            "text": "greg's age",
            "touchedBy": [
              "properties#call19",
              "properties#call18"
            ],
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "age",
            "word": "age"
          },
          "word": "is"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "default": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 39,
            "start": 22
          },
          "text": "what",
          "types": [
            "what"
          ],
          "value": "what",
          "word": "what"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 39,
          "start": 22
        },
        "text": "what is greg's age",
        "topLevel": true,
        "touchedBy": [
          "properties#call18"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "property",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 33,
              "start": 30
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "dead": true,
              "level": 1,
              "marker": "property",
              "range": {
                "end": 39,
                "start": 37
              },
              "text": "age",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "age",
              "word": "age"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 33,
                "start": 30
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "possession": true,
          "range": {
            "end": 39,
            "start": 30
          },
          "text": "greg's age",
          "types": [
            "property"
          ],
          "unknown": true,
          "value": "age",
          "word": "age"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      "(((((greg)'s) (age)) is ((23))))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "possession",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "possession",
              0
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "isEd",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "possession",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "possession",
              1
            ]
          ]
        },
        {
          "counter": 13,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 14,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 15,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 16,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "age": [
              "23"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "23",
            "age",
            "greg"
          ],
          "parents": {
            "23": [
              "age"
            ],
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "23": {
              },
              "a": {
              },
              "adjective": {
              },
              "age": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "age": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 20,
                      "start": 19
                    },
                    "text": "23",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "23",
                    "word": "23"
                  }
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "age": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 20,
                  "start": 19
                },
                "text": "23",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "23",
                "word": "23"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "evalue": {
              "default": true,
              "focusable": [
                "two",
                "one"
              ],
              "marker": "is",
              "one": {
                "dead": true,
                "level": 1,
                "marker": "property",
                "object": {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 33,
                    "start": 30
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                },
                "objects": [
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "property",
                    "range": {
                      "end": 39,
                      "start": 37
                    },
                    "text": "age",
                    "types": [
                      "property"
                    ],
                    "unknown": true,
                    "value": "age",
                    "word": "age"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 33,
                      "start": 30
                    },
                    "text": "greg",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                ],
                "possession": true,
                "range": {
                  "end": 39,
                  "start": 30
                },
                "text": "greg's age",
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "age",
                "word": "age"
              },
              "two": {
                "dead": true,
                "evalue": {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 20,
                    "start": 19
                  },
                  "text": "23",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "23",
                  "word": "23"
                },
                "focus": true,
                "focusable": [
                  "object[0]"
                ],
                "instance": true,
                "level": 1,
                "marker": "property",
                "objects": [
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "property",
                    "range": {
                      "end": 39,
                      "start": 37
                    },
                    "text": "age",
                    "types": [
                      "property"
                    ],
                    "unknown": true,
                    "value": "age",
                    "word": "age"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 33,
                      "start": 30
                    },
                    "text": "greg",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                ],
                "possession": true,
                "range": {
                  "end": 39,
                  "start": 30
                },
                "text": "greg's age",
                "touchedBy": [
                  "properties#call19",
                  "properties#call18"
                ],
                "types": [
                  "property"
                ],
                "unknown": true,
                "value": "age",
                "word": "age"
              },
              "word": "is"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "default": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 39,
                "start": 22
              },
              "text": "what",
              "types": [
                "what"
              ],
              "value": "what",
              "word": "what"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 39,
              "start": 22
            },
            "text": "what is greg's age",
            "topLevel": true,
            "touchedBy": [
              "properties#call18"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "property",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 33,
                  "start": 30
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "property",
                  "range": {
                    "end": 39,
                    "start": 37
                  },
                  "text": "age",
                  "types": [
                    "property"
                  ],
                  "unknown": true,
                  "value": "age",
                  "word": "age"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 33,
                    "start": 30
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "possession": true,
              "range": {
                "end": 39,
                "start": 30
              },
              "text": "greg's age",
              "types": [
                "property"
              ],
              "unknown": true,
              "value": "age",
              "word": "age"
            },
            "word": "is"
          },
          "generatedParenthesized": "(((((greg)'s) (age)) is ((23))))",
          "paraphrases": "what is greg's age?",
          "paraphrasesParenthesized": "(((what) is (((greg)'s) (age)))?)",
          "responses": [
            "",
            "greg's age is 23"
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 14,
                  "start": 11
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 6,
                    "start": 0
                  },
                  "text": "the age",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "age",
                  "wantsValue": true,
                  "word": "age"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 14,
                    "start": 11
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "the age of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "the age of greg is 23",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 19
              },
              "text": "23",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "23",
              "word": "23"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "the age of greg is 23",
          "paraphrasesParenthesized": "(((the (age)) of (greg)) is (23))",
          "responses": [
            "",
            "greg's age is 23"
          ]
        }
      ]
    },
    "paraphrases": [
      "the age of greg is 23",
      "what is greg's age?"
    ],
    "paraphrasesParenthesized": [
      "(((the (age)) of (greg)) is (23))",
      "(((what) is (((greg)'s) (age)))?)"
    ],
    "query": "the age of greg is 23 what is greg's age",
    "responses": [
      "",
      "greg's age is 23"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 33,
                "start": 30
              }
            },
            {
              "marker": [
                "possession",
                0
              ],
              "range": {
                "end": 35,
                "start": 34
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 35,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 12,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "possession",
                1
              ],
              "range": {
                "end": 35,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 39,
                "start": 37
              }
            }
          ]
        },
        {
          "counter": 13,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 39,
                "start": 30
              }
            }
          ]
        },
        {
          "counter": 14,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 39,
                "start": 30
              }
            }
          ]
        },
        {
          "counter": 15,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 39,
                "start": 22
              }
            }
          ]
        },
        {
          "counter": 16,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 39,
                "start": 22
              }
            }
          ]
        },
        {
          "counter": 17,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 39,
                "start": 22
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 14,
              "start": 11
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 6,
                "start": 0
              },
              "text": "the age",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 14,
                "start": 11
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 20,
            "start": 0
          },
          "text": "the age of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "age",
          "wantsValue": true,
          "word": "age"
        },
        "range": {
          "end": 20,
          "start": 0
        },
        "text": "the age of greg is 23",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 20,
            "start": 19
          },
          "text": "23",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "23",
          "word": "23"
        },
        "word": "is"
      },
      {
        "context_index": 3,
        "dead": true,
        "evalue": {
          "default": true,
          "focusable": [
            "two",
            "one"
          ],
          "marker": "is",
          "one": {
            "concept": true,
            "dead": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 44,
                "start": 41
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "objects": [
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 36,
                  "start": 30
                },
                "text": "the age",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "age",
                "wantsValue": true,
                "word": "age"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 44,
                  "start": 41
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 44,
              "start": 30
            },
            "text": "the age of greg",
            "types": [
              "property",
              "unknown"
            ],
            "unknown": true,
            "value": "age",
            "wantsValue": true,
            "word": "age"
          },
          "two": {
            "concept": true,
            "dead": true,
            "determiner": "the",
            "evalue": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 19
              },
              "text": "23",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "23",
              "word": "23"
            },
            "focus": true,
            "focusable": [
              "object[0]"
            ],
            "focusableForPhrase": true,
            "instance": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "objects": [
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 36,
                  "start": 30
                },
                "text": "the age",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "age",
                "wantsValue": true,
                "word": "age"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 44,
                  "start": 41
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 44,
              "start": 30
            },
            "text": "the age of greg",
            "touchedBy": [
              "properties#call19",
              "properties#call18"
            ],
            "types": [
              "property",
              "unknown"
            ],
            "unknown": true,
            "value": "age",
            "wantsValue": true,
            "word": "age"
          },
          "word": "is"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "default": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 44,
            "start": 22
          },
          "text": "what",
          "types": [
            "what"
          ],
          "value": "what",
          "word": "what"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 44,
          "start": 22
        },
        "text": "what is the age of greg",
        "topLevel": true,
        "touchedBy": [
          "properties#call18"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 44,
              "start": 41
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 36,
                "start": 30
              },
              "text": "the age",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 44,
                "start": 41
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 44,
            "start": 30
          },
          "text": "the age of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "age",
          "wantsValue": true,
          "word": "age"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      "((((the (age)) of (greg)) is ((23))))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 13,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 14,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 15,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 16,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "age": [
              "23"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "23",
            "age",
            "greg"
          ],
          "parents": {
            "23": [
              "age"
            ],
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "23": {
              },
              "a": {
              },
              "adjective": {
              },
              "age": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "age": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 20,
                      "start": 19
                    },
                    "text": "23",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "23",
                    "word": "23"
                  }
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "age": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 20,
                  "start": 19
                },
                "text": "23",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "23",
                "word": "23"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "evalue": {
              "default": true,
              "focusable": [
                "two",
                "one"
              ],
              "marker": "is",
              "one": {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "object": {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 44,
                    "start": 41
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                },
                "objects": [
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "property",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 36,
                      "start": 30
                    },
                    "text": "the age",
                    "types": [
                      "property",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "age",
                    "wantsValue": true,
                    "word": "age"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 44,
                      "start": 41
                    },
                    "text": "greg",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                ],
                "pullFromContext": true,
                "range": {
                  "end": 44,
                  "start": 30
                },
                "text": "the age of greg",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "age",
                "wantsValue": true,
                "word": "age"
              },
              "two": {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "evalue": {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 20,
                    "start": 19
                  },
                  "text": "23",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "23",
                  "word": "23"
                },
                "focus": true,
                "focusable": [
                  "object[0]"
                ],
                "focusableForPhrase": true,
                "instance": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "objects": [
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "property",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 36,
                      "start": 30
                    },
                    "text": "the age",
                    "types": [
                      "property",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "age",
                    "wantsValue": true,
                    "word": "age"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 44,
                      "start": 41
                    },
                    "text": "greg",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                ],
                "pullFromContext": true,
                "range": {
                  "end": 44,
                  "start": 30
                },
                "text": "the age of greg",
                "touchedBy": [
                  "properties#call19",
                  "properties#call18"
                ],
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "age",
                "wantsValue": true,
                "word": "age"
              },
              "word": "is"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "default": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 44,
                "start": 22
              },
              "text": "what",
              "types": [
                "what"
              ],
              "value": "what",
              "word": "what"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 44,
              "start": 22
            },
            "text": "what is the age of greg",
            "topLevel": true,
            "touchedBy": [
              "properties#call18"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 44,
                  "start": 41
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 36,
                    "start": 30
                  },
                  "text": "the age",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "age",
                  "wantsValue": true,
                  "word": "age"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 44,
                    "start": 41
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 44,
                "start": 30
              },
              "text": "the age of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            "word": "is"
          },
          "generatedParenthesized": "((((the (age)) of (greg)) is ((23))))",
          "paraphrases": "what is the age of greg?",
          "paraphrasesParenthesized": "(((what) is ((the (age)) of (greg)))?)",
          "responses": [
            "",
            "the age of greg is 23"
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 14,
                  "start": 11
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 6,
                    "start": 0
                  },
                  "text": "the age",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "age",
                  "wantsValue": true,
                  "word": "age"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 14,
                    "start": 11
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "the age of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "the age of greg is 23",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 19
              },
              "text": "23",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "23",
              "word": "23"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "the age of greg is 23",
          "paraphrasesParenthesized": "(((the (age)) of (greg)) is (23))",
          "responses": [
            "",
            "the age of greg is 23"
          ]
        }
      ]
    },
    "paraphrases": [
      "the age of greg is 23",
      "what is the age of greg?"
    ],
    "paraphrasesParenthesized": [
      "(((the (age)) of (greg)) is (23))",
      "(((what) is ((the (age)) of (greg)))?)"
    ],
    "query": "the age of greg is 23 what is the age of greg",
    "responses": [
      "",
      "the age of greg is 23"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 32,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 36,
                "start": 34
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 32,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 36,
                "start": 34
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 32,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 36,
                "start": 34
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 32,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 36,
                "start": 34
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 32,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 34
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 32,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 34
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 32,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 34
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 32,
                "start": 30
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 34
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 30
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 30
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 39,
                "start": 38
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 44,
                "start": 41
              }
            }
          ]
        },
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 30
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 44,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 12,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 36,
                "start": 30
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 44,
                "start": 38
              }
            }
          ]
        },
        {
          "counter": 13,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 44,
                "start": 30
              }
            }
          ]
        },
        {
          "counter": 14,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 25,
                "start": 22
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 28,
                "start": 27
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 44,
                "start": 30
              }
            }
          ]
        },
        {
          "counter": 15,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 44,
                "start": 22
              }
            }
          ]
        },
        {
          "counter": 16,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 44,
                "start": 22
              }
            }
          ]
        },
        {
          "counter": 17,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 44,
                "start": 22
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 14,
              "start": 11
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 6,
                "start": 0
              },
              "text": "the age",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 14,
                "start": 11
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 20,
            "start": 0
          },
          "text": "the age of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "age",
          "wantsValue": true,
          "word": "age"
        },
        "range": {
          "end": 20,
          "start": 0
        },
        "text": "the age of greg is 23",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 20,
            "start": 19
          },
          "text": "23",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "23",
          "word": "23"
        },
        "word": "is"
      },
      {
        "context_index": 1,
        "dead": true,
        "evalue": {
          "default": true,
          "focusable": [
            "two",
            "one"
          ],
          "marker": "is",
          "one": {
            "concept": true,
            "dead": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "object": {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 22,
                "start": 19
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "objects": [
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 14,
                  "start": 8
                },
                "text": "the age",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "age",
                "wantsValue": true,
                "word": "age"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 22,
                  "start": 19
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 22,
              "start": 8
            },
            "text": "the age of greg",
            "types": [
              "property",
              "unknown"
            ],
            "unknown": true,
            "value": "age",
            "wantsValue": true,
            "word": "age"
          },
          "two": {
            "concept": true,
            "dead": true,
            "determiner": "the",
            "evalue": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 19
              },
              "text": "23",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "23",
              "word": "23"
            },
            "focus": true,
            "focusable": [
              "object[0]"
            ],
            "focusableForPhrase": true,
            "instance": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "objects": [
              {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 14,
                  "start": 8
                },
                "text": "the age",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "age",
                "wantsValue": true,
                "word": "age"
              },
              {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 22,
                  "start": 19
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 22,
              "start": 8
            },
            "text": "the age of greg",
            "touchedBy": [
              "properties#call3",
              "properties#call2"
            ],
            "types": [
              "property",
              "unknown"
            ],
            "unknown": true,
            "value": "age",
            "wantsValue": true,
            "word": "age"
          },
          "word": "is"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "default": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 22,
            "start": 0
          },
          "text": "what",
          "types": [
            "what"
          ],
          "value": "what",
          "word": "what"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 22,
          "start": 0
        },
        "text": "what is the age of greg",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 22,
              "start": 19
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 14,
                "start": 8
              },
              "text": "the age",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 22,
                "start": 19
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 22,
            "start": 8
          },
          "text": "the age of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "age",
          "wantsValue": true,
          "word": "age"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      "((((the (age)) of (greg)) is ((23))))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 13,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 14,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 15,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 16,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 17,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 18,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "age": [
              "23"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "23",
            "age",
            "greg"
          ],
          "parents": {
            "23": [
              "age"
            ],
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "23": {
              },
              "a": {
              },
              "adjective": {
              },
              "age": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "age": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 20,
                      "start": 19
                    },
                    "text": "23",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "23",
                    "word": "23"
                  }
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "age": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 20,
                  "start": 19
                },
                "text": "23",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "23",
                "word": "23"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "evalue": {
              "default": true,
              "focusable": [
                "two",
                "one"
              ],
              "marker": "is",
              "one": {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "object": {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 22,
                    "start": 19
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                },
                "objects": [
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "property",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 14,
                      "start": 8
                    },
                    "text": "the age",
                    "types": [
                      "property",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "age",
                    "wantsValue": true,
                    "word": "age"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 22,
                      "start": 19
                    },
                    "text": "greg",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                ],
                "pullFromContext": true,
                "range": {
                  "end": 22,
                  "start": 8
                },
                "text": "the age of greg",
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "age",
                "wantsValue": true,
                "word": "age"
              },
              "two": {
                "concept": true,
                "dead": true,
                "determiner": "the",
                "evalue": {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 20,
                    "start": 19
                  },
                  "text": "23",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "23",
                  "word": "23"
                },
                "focus": true,
                "focusable": [
                  "object[0]"
                ],
                "focusableForPhrase": true,
                "instance": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "objects": [
                  {
                    "concept": true,
                    "dead": true,
                    "determiner": "the",
                    "focusableForPhrase": true,
                    "level": 1,
                    "marker": "property",
                    "modifiers": [
                      "determiner"
                    ],
                    "pullFromContext": true,
                    "range": {
                      "end": 14,
                      "start": 8
                    },
                    "text": "the age",
                    "types": [
                      "property",
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "age",
                    "wantsValue": true,
                    "word": "age"
                  },
                  {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "range": {
                      "end": 22,
                      "start": 19
                    },
                    "text": "greg",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                ],
                "pullFromContext": true,
                "range": {
                  "end": 22,
                  "start": 8
                },
                "text": "the age of greg",
                "touchedBy": [
                  "properties#call3",
                  "properties#call2"
                ],
                "types": [
                  "property",
                  "unknown"
                ],
                "unknown": true,
                "value": "age",
                "wantsValue": true,
                "word": "age"
              },
              "word": "is"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "default": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 22,
                "start": 0
              },
              "text": "what",
              "types": [
                "what"
              ],
              "value": "what",
              "word": "what"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 22,
              "start": 0
            },
            "text": "what is the age of greg",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 22,
                  "start": 19
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 14,
                    "start": 8
                  },
                  "text": "the age",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "age",
                  "wantsValue": true,
                  "word": "age"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 22,
                    "start": 19
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 22,
                "start": 8
              },
              "text": "the age of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            "word": "is"
          },
          "generatedParenthesized": "((((the (age)) of (greg)) is ((23))))",
          "paraphrases": "what is the age of greg?",
          "paraphrasesParenthesized": "(((what) is ((the (age)) of (greg)))?)",
          "responses": [
            "the age of greg is 23"
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 14,
                  "start": 11
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 6,
                    "start": 0
                  },
                  "text": "the age",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "age",
                  "wantsValue": true,
                  "word": "age"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 14,
                    "start": 11
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 20,
                "start": 0
              },
              "text": "the age of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "the age of greg is 23",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 19
              },
              "text": "23",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "23",
              "word": "23"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "the age of greg is 23",
          "paraphrasesParenthesized": "(((the (age)) of (greg)) is (23))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "the age of greg is 23",
      "what is the age of greg?"
    ],
    "paraphrasesParenthesized": [
      "(((the (age)) of (greg)) is (23))",
      "(((what) is ((the (age)) of (greg)))?)"
    ],
    "query": "the age of greg is 23\\nwhat is the age of greg",
    "responses": [
      "",
      "the age of greg is 23"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 11
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 14,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            }
          ]
        }
      ],
      [
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 12,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 13,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 14,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 15,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 16,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 22,
                "start": 16
              }
            }
          ]
        },
        {
          "counter": 17,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 22,
                "start": 8
              }
            }
          ]
        },
        {
          "counter": 18,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 19,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "readonly",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "readonly",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 15,
              "start": 12
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 7,
                "start": 0
              },
              "text": "the name",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "name",
              "wantsValue": true,
              "word": "name"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 15,
                "start": 12
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 23,
            "start": 0
          },
          "text": "the name of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "name",
          "wantsValue": true,
          "word": "name"
        },
        "range": {
          "end": 23,
          "start": 0
        },
        "text": "the name of greg is greg",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 23,
            "start": 20
          },
          "text": "greg",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "word": "is"
      },
      {
        "context_index": 3,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 40,
            "start": 25
          },
          "text": "greg",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "range": {
          "end": 40,
          "start": 25
        },
        "text": "greg is readonly",
        "topLevel": true,
        "touchedBy": [
          "properties#call18"
        ],
        "two": {
          "dead": true,
          "default": true,
          "level": 1,
          "marker": "readonly",
          "range": {
            "end": 40,
            "start": 33
          },
          "text": "readonly",
          "types": [
            "readonly"
          ],
          "value": "readonly",
          "word": "readonly"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ],
            [
              "readonly",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "readonly",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "readonly",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "name": [
              "greg"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "greg",
            "name"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "greg": [
              "name"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
              "greg": {
              }
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "name": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 23,
                      "start": 20
                    },
                    "text": "greg",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "name": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "name": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 23,
                  "start": 20
                },
                "text": "greg",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 40,
                "start": 25
              },
              "text": "greg",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "range": {
              "end": 40,
              "start": 25
            },
            "text": "greg is readonly",
            "topLevel": true,
            "touchedBy": [
              "properties#call18"
            ],
            "two": {
              "dead": true,
              "default": true,
              "level": 1,
              "marker": "readonly",
              "range": {
                "end": 40,
                "start": 33
              },
              "text": "readonly",
              "types": [
                "readonly"
              ],
              "value": "readonly",
              "word": "readonly"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "greg is readonly",
          "paraphrasesParenthesized": "((greg) is (readonly))",
          "responses": [
            "",
            ""
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 15,
                  "start": 12
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 7,
                    "start": 0
                  },
                  "text": "the name",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "name",
                  "wantsValue": true,
                  "word": "name"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 15,
                    "start": 12
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 23,
                "start": 0
              },
              "text": "the name of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "name",
              "wantsValue": true,
              "word": "name"
            },
            "range": {
              "end": 23,
              "start": 0
            },
            "text": "the name of greg is greg",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 23,
                "start": 20
              },
              "text": "greg",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "the name of greg is greg",
          "paraphrasesParenthesized": "(((the (name)) of (greg)) is (greg))",
          "responses": [
            "",
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "the name of greg is greg",
      "greg is readonly"
    ],
    "paraphrasesParenthesized": [
      "(((the (name)) of (greg)) is (greg))",
      "((greg) is (readonly))"
    ],
    "query": "the name of greg is greg greg is readonly",
    "responses": [
      "",
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 15,
                "start": 9
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 15,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 15,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            }
          ]
        },
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 40,
                "start": 25
              }
            }
          ]
        },
        {
          "counter": 12,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 40,
                "start": 25
              }
            }
          ]
        },
        {
          "counter": 13,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 40,
                "start": 25
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "readonly",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "readonly",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 15,
              "start": 12
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 7,
                "start": 0
              },
              "text": "the name",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "name",
              "wantsValue": true,
              "word": "name"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 15,
                "start": 12
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 23,
            "start": 0
          },
          "text": "the name of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "name",
          "wantsValue": true,
          "word": "name"
        },
        "range": {
          "end": 23,
          "start": 0
        },
        "text": "the name of greg is greg",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 23,
            "start": 20
          },
          "text": "greg",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "word": "is"
      },
      {
        "context_index": 3,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 40,
            "start": 25
          },
          "text": "greg",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "greg",
          "word": "greg"
        },
        "range": {
          "end": 40,
          "start": 25
        },
        "text": "greg is readonly",
        "topLevel": true,
        "touchedBy": [
          "properties#call18"
        ],
        "two": {
          "dead": true,
          "default": true,
          "level": 1,
          "marker": "readonly",
          "range": {
            "end": 40,
            "start": 33
          },
          "text": "readonly",
          "types": [
            "readonly"
          ],
          "value": "readonly",
          "word": "readonly"
        },
        "word": "is"
      },
      {
        "context_index": 5,
        "dead": true,
        "evalue": [
          {
            "marker": "yesno",
            "paraphrase": true,
            "value": false
          },
          {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "paraphrase": true,
                "range": {
                  "end": 23,
                  "start": 17
                },
                "text": "object1",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "paraphrase": true,
                  "pullFromContext": true,
                  "range": {
                    "end": 12,
                    "start": 0
                  },
                  "text": "the property1",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "name",
                  "wantsValue": true,
                  "word": "name"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "paraphrase": true,
                  "range": {
                    "end": 23,
                    "start": 17
                  },
                  "text": "object1",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "paraphrase": true,
              "pullFromContext": true,
              "range": {
                "end": 33,
                "start": 0
              },
              "text": "the property1 of object1",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "name",
              "wantsValue": true,
              "word": "name"
            },
            "paraphrase": true,
            "range": {
              "end": 33,
              "start": 0
            },
            "text": "the property1 of object1 is value1",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 23,
                "start": 20
              },
              "text": "greg",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "word": "is"
          }
        ],
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 57,
              "start": 54
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 49,
                "start": 42
              },
              "text": "the name",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "name",
              "wantsValue": true,
              "word": "name"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 57,
                "start": 54
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 65,
            "start": 42
          },
          "text": "the name of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "name",
          "wantsValue": true,
          "word": "name"
        },
        "range": {
          "end": 65,
          "start": 42
        },
        "text": "the name of greg is fred",
        "topLevel": true,
        "touchedBy": [
          "properties#call28"
        ],
        "two": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "range": {
            "end": 65,
            "start": 62
          },
          "text": "fred",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "fred",
          "word": "fred"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "",
      "",
      "((no) (((the (name)) of (greg)) is (greg)))"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 9,
          "op": [
            "readonly",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "readonly",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 10,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 11,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 12,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 13,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 14,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 15,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 16,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              0
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 17,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 18,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 19,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ],
            [
              "is",
              1
            ]
          ]
        },
        {
          "counter": 20,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "name": [
              "greg"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that",
            "greg",
            "name"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "greg": [
              "name"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
              "greg": {
              }
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "greg": {
                "name": {
                  "has": true,
                  "value": {
                    "dead": true,
                    "level": 1,
                    "marker": "unknown",
                    "range": {
                      "end": 23,
                      "start": 20
                    },
                    "text": "greg",
                    "types": [
                      "unknown"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  }
                }
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "name": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
            "name": [
              {
                "dead": true,
                "level": 1,
                "marker": "unknown",
                "range": {
                  "end": 23,
                  "start": 20
                },
                "text": "greg",
                "types": [
                  "unknown"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              }
            ]
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 5,
            "dead": true,
            "evalue": [
              {
                "marker": "yesno",
                "paraphrase": true,
                "value": false
              },
              {
                "context_index": 1,
                "dead": true,
                "level": 2,
                "marker": "is",
                "number": "one",
                "one": {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "number": "one",
                  "object": {
                    "dead": true,
                    "level": 1,
                    "marker": "object",
                    "paraphrase": true,
                    "range": {
                      "end": 23,
                      "start": 17
                    },
                    "text": "object1",
                    "types": [
                      "object"
                    ],
                    "unknown": true,
                    "value": "greg",
                    "word": "greg"
                  },
                  "objects": [
                    {
                      "concept": true,
                      "dead": true,
                      "determiner": "the",
                      "focusableForPhrase": true,
                      "level": 1,
                      "marker": "property",
                      "modifiers": [
                        "determiner"
                      ],
                      "paraphrase": true,
                      "pullFromContext": true,
                      "range": {
                        "end": 12,
                        "start": 0
                      },
                      "text": "the property1",
                      "types": [
                        "property",
                        "unknown"
                      ],
                      "unknown": true,
                      "value": "name",
                      "wantsValue": true,
                      "word": "name"
                    },
                    {
                      "dead": true,
                      "level": 1,
                      "marker": "object",
                      "paraphrase": true,
                      "range": {
                        "end": 23,
                        "start": 17
                      },
                      "text": "object1",
                      "types": [
                        "object"
                      ],
                      "unknown": true,
                      "value": "greg",
                      "word": "greg"
                    }
                  ],
                  "paraphrase": true,
                  "pullFromContext": true,
                  "range": {
                    "end": 33,
                    "start": 0
                  },
                  "text": "the property1 of object1",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "name",
                  "wantsValue": true,
                  "word": "name"
                },
                "paraphrase": true,
                "range": {
                  "end": 33,
                  "start": 0
                },
                "text": "the property1 of object1 is value1",
                "topLevel": true,
                "touchedBy": [
                  "properties#call2"
                ],
                "two": {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 23,
                    "start": 20
                  },
                  "text": "greg",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                },
                "word": "is"
              }
            ],
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 57,
                  "start": 54
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 49,
                    "start": 42
                  },
                  "text": "the name",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "name",
                  "wantsValue": true,
                  "word": "name"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 57,
                    "start": 54
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 65,
                "start": 42
              },
              "text": "the name of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "name",
              "wantsValue": true,
              "word": "name"
            },
            "range": {
              "end": 65,
              "start": 42
            },
            "text": "the name of greg is fred",
            "topLevel": true,
            "touchedBy": [
              "properties#call28"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 65,
                "start": 62
              },
              "text": "fred",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "fred",
              "word": "fred"
            },
            "word": "is"
          },
          "generatedParenthesized": "((no) (((the (name)) of (greg)) is (greg)))",
          "paraphrases": "the name of greg is fred",
          "paraphrasesParenthesized": "(((the (name)) of (greg)) is (fred))",
          "responses": [
            "",
            "",
            "no the name of greg is greg"
          ]
        },
        {
          "context": {
            "context_index": 3,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 40,
                "start": 25
              },
              "text": "greg",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "range": {
              "end": 40,
              "start": 25
            },
            "text": "greg is readonly",
            "topLevel": true,
            "touchedBy": [
              "properties#call18"
            ],
            "two": {
              "dead": true,
              "default": true,
              "level": 1,
              "marker": "readonly",
              "range": {
                "end": 40,
                "start": 33
              },
              "text": "readonly",
              "types": [
                "readonly"
              ],
              "value": "readonly",
              "word": "readonly"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "greg is readonly",
          "paraphrasesParenthesized": "((greg) is (readonly))",
          "responses": [
            "",
            "",
            "no the name of greg is greg"
          ]
        },
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 15,
                  "start": 12
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 7,
                    "start": 0
                  },
                  "text": "the name",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "name",
                  "wantsValue": true,
                  "word": "name"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 15,
                    "start": 12
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 23,
                "start": 0
              },
              "text": "the name of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "name",
              "wantsValue": true,
              "word": "name"
            },
            "range": {
              "end": 23,
              "start": 0
            },
            "text": "the name of greg is greg",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 23,
                "start": 20
              },
              "text": "greg",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "the name of greg is greg",
          "paraphrasesParenthesized": "(((the (name)) of (greg)) is (greg))",
          "responses": [
            "",
            "",
            "no the name of greg is greg"
          ]
        }
      ]
    },
    "paraphrases": [
      "the name of greg is greg",
      "greg is readonly",
      "the name of greg is fred"
    ],
    "paraphrasesParenthesized": [
      "(((the (name)) of (greg)) is (greg))",
      "((greg) is (readonly))",
      "(((the (name)) of (greg)) is (fred))"
    ],
    "query": "the name of greg is greg greg is readonly the name of greg is fred",
    "responses": [
      "",
      "",
      "no the name of greg is greg"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                0
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 10,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 44,
                "start": 42
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 46
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 11,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 10,
                "start": 9
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 15,
                "start": 12
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 42
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 12,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 15,
                "start": 9
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 42
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 52,
                "start": 51
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 57,
                "start": 54
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 13,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 7,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 15,
                "start": 9
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 42
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 57,
                "start": 51
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 14,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 15,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 49,
                "start": 42
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 57,
                "start": 51
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 15,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 15,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 18,
                "start": 17
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 23,
                "start": 20
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 57,
                "start": 42
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 16,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 28,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 31,
                "start": 30
              }
            },
            {
              "marker": [
                "readonly",
                1
              ],
              "range": {
                "end": 40,
                "start": 33
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 57,
                "start": 42
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 17,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 40,
                "start": 25
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 57,
                "start": 42
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 60,
                "start": 59
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 65,
                "start": 62
              }
            }
          ]
        },
        {
          "counter": 18,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 40,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 65,
                "start": 42
              }
            }
          ]
        },
        {
          "counter": 19,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 40,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 65,
                "start": 42
              }
            }
          ]
        },
        {
          "counter": 20,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 40,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 65,
                "start": 42
              }
            }
          ]
        },
        {
          "counter": 21,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 23,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 40,
                "start": 25
              }
            },
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 65,
                "start": 42
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "property",
          0
        ],
        [
          "the",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "concept": true,
        "context_index": 1,
        "dead": true,
        "default": true,
        "determiner": "the",
        "focusableForPhrase": true,
        "level": 1,
        "marker": "property",
        "modifiers": [
          "determiner"
        ],
        "pullFromContext": true,
        "range": {
          "end": 11,
          "start": 0
        },
        "text": "the property",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "types": [
          "property"
        ],
        "value": {
          "marker": "answerNotKnown"
        },
        "wantsValue": true,
        "word": "property"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "property",
            0
          ],
          "ops": [
            [
              "property",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "the",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "concept": true,
            "context_index": 1,
            "dead": true,
            "default": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "pullFromContext": true,
            "range": {
              "end": 11,
              "start": 0
            },
            "text": "the property",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "types": [
              "property"
            ],
            "value": {
              "marker": "answerNotKnown"
            },
            "wantsValue": true,
            "word": "property"
          },
          "generatedParenthesized": "",
          "paraphrases": "the property",
          "paraphrasesParenthesized": "(the (property))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "the property"
    ],
    "paraphrasesParenthesized": [
      "(the (property))"
    ],
    "query": "the property",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 11,
                "start": 4
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 4
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "object",
          0
        ],
        [
          "property",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ]
      ],
      [
        [
          "object",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "concept": true,
        "context_index": 1,
        "dead": true,
        "default": true,
        "determiner": "the",
        "focusableForPhrase": true,
        "level": 1,
        "marker": "property",
        "modifiers": [
          "determiner"
        ],
        "object": {
          "dead": true,
          "default": true,
          "level": 1,
          "marker": "object",
          "range": {
            "end": 21,
            "start": 16
          },
          "text": "object",
          "types": [
            "object"
          ],
          "value": "object",
          "word": "object"
        },
        "objects": [
          {
            "concept": true,
            "dead": true,
            "default": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "pullFromContext": true,
            "range": {
              "end": 11,
              "start": 0
            },
            "text": "the property",
            "types": [
              "property"
            ],
            "value": "property",
            "wantsValue": true,
            "word": "property"
          },
          {
            "dead": true,
            "default": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 21,
              "start": 16
            },
            "text": "object",
            "types": [
              "object"
            ],
            "value": "object",
            "word": "object"
          }
        ],
        "pullFromContext": true,
        "range": {
          "end": 21,
          "start": 0
        },
        "text": "the property of object",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "types": [
          "property"
        ],
        "value": {
          "marker": "answerNotKnown"
        },
        "wantsValue": true,
        "word": "property"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "property",
            0
          ],
          "ops": [
            [
              "object",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "object",
            0
          ],
          "ops": [
            [
              "object",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "propertyOf",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "concept": true,
            "context_index": 1,
            "dead": true,
            "default": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "object": {
              "dead": true,
              "default": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 21,
                "start": 16
              },
              "text": "object",
              "types": [
                "object"
              ],
              "value": "object",
              "word": "object"
            },
            "objects": [
              {
                "concept": true,
                "dead": true,
                "default": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 11,
                  "start": 0
                },
                "text": "the property",
                "types": [
                  "property"
                ],
                "value": "property",
                "wantsValue": true,
                "word": "property"
              },
              {
                "dead": true,
                "default": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 21,
                  "start": 16
                },
                "text": "object",
                "types": [
                  "object"
                ],
                "value": "object",
                "word": "object"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 21,
              "start": 0
            },
            "text": "the property of object",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "types": [
              "property"
            ],
            "value": {
              "marker": "answerNotKnown"
            },
            "wantsValue": true,
            "word": "property"
          },
          "generatedParenthesized": "",
          "paraphrases": "the property of object",
          "paraphrasesParenthesized": "((the (property)) of (object))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "the property of object"
    ],
    "paraphrasesParenthesized": [
      "((the (property)) of (object))"
    ],
    "query": "the property of object",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 11,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 21,
                "start": 16
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 21,
                "start": 16
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "object",
                1
              ],
              "range": {
                "end": 21,
                "start": 16
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "object",
                1
              ],
              "range": {
                "end": 21,
                "start": 16
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 21,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 21,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "object",
          0
        ],
        [
          "property",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ]
      ],
      [
        [
          "object",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "concept": true,
        "context_index": 1,
        "dead": true,
        "default": true,
        "determiner": "the",
        "focusableForPhrase": true,
        "level": 1,
        "marker": "property",
        "modifiers": [
          "determiner"
        ],
        "object": {
          "concept": true,
          "dead": true,
          "default": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "object",
          "modifiers": [
            "determiner"
          ],
          "pullFromContext": true,
          "range": {
            "end": 25,
            "start": 16
          },
          "text": "the object",
          "types": [
            "object"
          ],
          "value": "object",
          "wantsValue": true,
          "word": "object"
        },
        "objects": [
          {
            "concept": true,
            "dead": true,
            "default": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "pullFromContext": true,
            "range": {
              "end": 11,
              "start": 0
            },
            "text": "the property",
            "types": [
              "property"
            ],
            "value": "property",
            "wantsValue": true,
            "word": "property"
          },
          {
            "concept": true,
            "dead": true,
            "default": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "object",
            "modifiers": [
              "determiner"
            ],
            "pullFromContext": true,
            "range": {
              "end": 25,
              "start": 16
            },
            "text": "the object",
            "types": [
              "object"
            ],
            "value": "object",
            "wantsValue": true,
            "word": "object"
          }
        ],
        "pullFromContext": true,
        "range": {
          "end": 25,
          "start": 0
        },
        "text": "the property of the object",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "types": [
          "property"
        ],
        "value": {
          "marker": "answerNotKnown"
        },
        "wantsValue": true,
        "word": "property"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "property",
            0
          ],
          "ops": [
            [
              "object",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "object",
            0
          ],
          "ops": [
            [
              "object",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "propertyOf",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "concept": true,
            "context_index": 1,
            "dead": true,
            "default": true,
            "determiner": "the",
            "focusableForPhrase": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "determiner"
            ],
            "object": {
              "concept": true,
              "dead": true,
              "default": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "object",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 25,
                "start": 16
              },
              "text": "the object",
              "types": [
                "object"
              ],
              "value": "object",
              "wantsValue": true,
              "word": "object"
            },
            "objects": [
              {
                "concept": true,
                "dead": true,
                "default": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "property",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 11,
                  "start": 0
                },
                "text": "the property",
                "types": [
                  "property"
                ],
                "value": "property",
                "wantsValue": true,
                "word": "property"
              },
              {
                "concept": true,
                "dead": true,
                "default": true,
                "determiner": "the",
                "focusableForPhrase": true,
                "level": 1,
                "marker": "object",
                "modifiers": [
                  "determiner"
                ],
                "pullFromContext": true,
                "range": {
                  "end": 25,
                  "start": 16
                },
                "text": "the object",
                "types": [
                  "object"
                ],
                "value": "object",
                "wantsValue": true,
                "word": "object"
              }
            ],
            "pullFromContext": true,
            "range": {
              "end": 25,
              "start": 0
            },
            "text": "the property of the object",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "types": [
              "property"
            ],
            "value": {
              "marker": "answerNotKnown"
            },
            "wantsValue": true,
            "word": "property"
          },
          "generatedParenthesized": "",
          "paraphrases": "the property of the object",
          "paraphrasesParenthesized": "((the (property)) of (the (object)))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "the property of the object"
    ],
    "paraphrasesParenthesized": [
      "((the (property)) of (the (object)))"
    ],
    "query": "the property of the object",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 11,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 18,
                "start": 16
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 25,
                "start": 20
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 18,
                "start": 16
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 25,
                "start": 20
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 4
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 18,
                "start": 16
              }
            },
            {
              "marker": [
                "object",
                1
              ],
              "range": {
                "end": 25,
                "start": 20
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 18,
                "start": 16
              }
            },
            {
              "marker": [
                "object",
                1
              ],
              "range": {
                "end": 25,
                "start": 20
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 14,
                "start": 13
              }
            },
            {
              "marker": [
                "object",
                1
              ],
              "range": {
                "end": 25,
                "start": 16
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 11,
                "start": 0
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 25,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 25,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "what",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "evalue": {
          "verbatim": "What \"greg\" means is unknown"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "default": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 22,
            "start": 0
          },
          "text": "what",
          "types": [
            "what"
          ],
          "value": "what",
          "word": "what"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 22,
          "start": 0
        },
        "text": "what is the age of greg",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "object": {
            "dead": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 22,
              "start": 19
            },
            "text": "greg",
            "types": [
              "object"
            ],
            "unknown": true,
            "value": "greg",
            "word": "greg"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 14,
                "start": 8
              },
              "text": "the age",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 22,
                "start": 19
              },
              "text": "greg",
              "types": [
                "object"
              ],
              "unknown": true,
              "value": "greg",
              "word": "greg"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 22,
            "start": 8
          },
          "text": "the age of greg",
          "types": [
            "property",
            "unknown"
          ],
          "unknown": true,
          "value": "age",
          "wantsValue": true,
          "word": "age"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "(What \"greg\" means is unknown)"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "isEd",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "evalue": {
              "verbatim": "What \"greg\" means is unknown"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "default": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 22,
                "start": 0
              },
              "text": "what",
              "types": [
                "what"
              ],
              "value": "what",
              "word": "what"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 22,
              "start": 0
            },
            "text": "what is the age of greg",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "object": {
                "dead": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 22,
                  "start": 19
                },
                "text": "greg",
                "types": [
                  "object"
                ],
                "unknown": true,
                "value": "greg",
                "word": "greg"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 14,
                    "start": 8
                  },
                  "text": "the age",
                  "types": [
                    "property",
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "age",
                  "wantsValue": true,
                  "word": "age"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 22,
                    "start": 19
                  },
                  "text": "greg",
                  "types": [
                    "object"
                  ],
                  "unknown": true,
                  "value": "greg",
                  "word": "greg"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 22,
                "start": 8
              },
              "text": "the age of greg",
              "types": [
                "property",
                "unknown"
              ],
              "unknown": true,
              "value": "age",
              "wantsValue": true,
              "word": "age"
            },
            "word": "is"
          },
          "generatedParenthesized": "(What \"greg\" means is unknown)",
          "paraphrases": "what is the age of greg?",
          "paraphrasesParenthesized": "(((what) is ((the (age)) of (greg)))?)",
          "responses": [
            "What \"greg\" means is unknown"
          ]
        }
      ]
    },
    "paraphrases": [
      "what is the age of greg?"
    ],
    "paraphrasesParenthesized": [
      "(((what) is ((the (age)) of (greg)))?)"
    ],
    "query": "what is the age of greg",
    "responses": [
      "What \"greg\" means is unknown"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 14,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "isEd",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 17,
                "start": 16
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 22,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 14,
                "start": 8
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 22,
                "start": 16
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 22,
                "start": 8
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 22,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "is",
          0
        ],
        [
          "object",
          0
        ],
        [
          "property",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "object",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "object",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ],
        [
          "what",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          0
        ],
        [
          "the",
          0
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "propertyOf",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "evalue": {
          "verbatim": "There is no property the property of object"
        },
        "isResponse": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "default": true,
          "determined": true,
          "level": 1,
          "marker": "what",
          "number": "one",
          "query": [
            "what"
          ],
          "range": {
            "end": 29,
            "start": 0
          },
          "text": "what",
          "types": [
            "what"
          ],
          "value": "what",
          "word": "what"
        },
        "query": [
          "what"
        ],
        "range": {
          "end": 29,
          "start": 0
        },
        "text": "what is the property of object",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "default": true,
          "determiner": "the",
          "focusableForPhrase": true,
          "level": 1,
          "marker": "property",
          "modifiers": [
            "determiner"
          ],
          "object": {
            "dead": true,
            "default": true,
            "level": 1,
            "marker": "object",
            "range": {
              "end": 29,
              "start": 24
            },
            "text": "object",
            "types": [
              "object"
            ],
            "value": "object",
            "word": "object"
          },
          "objects": [
            {
              "concept": true,
              "dead": true,
              "default": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "pullFromContext": true,
              "range": {
                "end": 19,
                "start": 8
              },
              "text": "the property",
              "types": [
                "property"
              ],
              "value": "property",
              "wantsValue": true,
              "word": "property"
            },
            {
              "dead": true,
              "default": true,
              "level": 1,
              "marker": "object",
              "range": {
                "end": 29,
                "start": 24
              },
              "text": "object",
              "types": [
                "object"
              ],
              "value": "object",
              "word": "object"
            }
          ],
          "pullFromContext": true,
          "range": {
            "end": 29,
            "start": 8
          },
          "text": "the property of object",
          "types": [
            "property"
          ],
          "value": "property",
          "wantsValue": true,
          "word": "property"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      "(There is no property the property of object)"
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "property",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "object",
              0
            ],
            [
              "property",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "what",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "object",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ],
            [
              "what",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "object",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "object",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "the",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ],
            [
              "the",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "propertyOf",
            0
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "propertyOf",
            1
          ],
          "ops": [
            [
              "is",
              0
            ],
            [
              "propertyOf",
              1
            ]
          ]
        },
        {
          "counter": 7,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 8,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "evalue": {
              "verbatim": "There is no property the property of object"
            },
            "isResponse": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "default": true,
              "determined": true,
              "level": 1,
              "marker": "what",
              "number": "one",
              "query": [
                "what"
              ],
              "range": {
                "end": 29,
                "start": 0
              },
              "text": "what",
              "types": [
                "what"
              ],
              "value": "what",
              "word": "what"
            },
            "query": [
              "what"
            ],
            "range": {
              "end": 29,
              "start": 0
            },
            "text": "what is the property of object",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "default": true,
              "determiner": "the",
              "focusableForPhrase": true,
              "level": 1,
              "marker": "property",
              "modifiers": [
                "determiner"
              ],
              "object": {
                "dead": true,
                "default": true,
                "level": 1,
                "marker": "object",
                "range": {
                  "end": 29,
                  "start": 24
                },
                "text": "object",
                "types": [
                  "object"
                ],
                "value": "object",
                "word": "object"
              },
              "objects": [
                {
                  "concept": true,
                  "dead": true,
                  "default": true,
                  "determiner": "the",
                  "focusableForPhrase": true,
                  "level": 1,
                  "marker": "property",
                  "modifiers": [
                    "determiner"
                  ],
                  "pullFromContext": true,
                  "range": {
                    "end": 19,
                    "start": 8
                  },
                  "text": "the property",
                  "types": [
                    "property"
                  ],
                  "value": "property",
                  "wantsValue": true,
                  "word": "property"
                },
                {
                  "dead": true,
                  "default": true,
                  "level": 1,
                  "marker": "object",
                  "range": {
                    "end": 29,
                    "start": 24
                  },
                  "text": "object",
                  "types": [
                    "object"
                  ],
                  "value": "object",
                  "word": "object"
                }
              ],
              "pullFromContext": true,
              "range": {
                "end": 29,
                "start": 8
              },
              "text": "the property of object",
              "types": [
                "property"
              ],
              "value": "property",
              "wantsValue": true,
              "word": "property"
            },
            "word": "is"
          },
          "generatedParenthesized": "(There is no property the property of object)",
          "paraphrases": "what is the property of object?",
          "paraphrasesParenthesized": "(((what) is ((the (property)) of (object)))?)",
          "responses": [
            "There is no property the property of object"
          ]
        }
      ]
    },
    "paraphrases": [
      "what is the property of object?"
    ],
    "paraphrasesParenthesized": [
      "(((what) is ((the (property)) of (object)))?)"
    ],
    "query": "what is the property of object",
    "responses": [
      "There is no property the property of object"
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 19,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 29,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "what",
                0
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 19,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 29,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 19,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "object",
                0
              ],
              "range": {
                "end": 29,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "the",
                0
              ],
              "range": {
                "end": 10,
                "start": 8
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 19,
                "start": 12
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "object",
                1
              ],
              "range": {
                "end": 29,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 19,
                "start": 8
              }
            },
            {
              "marker": [
                "propertyOf",
                0
              ],
              "range": {
                "end": 22,
                "start": 21
              }
            },
            {
              "marker": [
                "object",
                1
              ],
              "range": {
                "end": 29,
                "start": 24
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 19,
                "start": 8
              }
            },
            {
              "marker": [
                "propertyOf",
                1
              ],
              "range": {
                "end": 29,
                "start": 21
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "what",
                1
              ],
              "range": {
                "end": 3,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 6,
                "start": 5
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 29,
                "start": 8
              }
            }
          ]
        },
        {
          "counter": 8,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 29,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 9,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 29,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "property",
          0
        ],
        [
          "whose",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "default": true,
        "level": 1,
        "marker": "property",
        "modifiers": [
          "whose"
        ],
        "query": true,
        "range": {
          "end": 13,
          "start": 0
        },
        "text": "whose property",
        "topLevel": true,
        "types": [
          "property"
        ],
        "value": "property",
        "whose": "whose",
        "word": "property"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "property",
            0
          ],
          "ops": [
            [
              "property",
              0
            ],
            [
              "whose",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "whose",
            0
          ],
          "ops": [
            [
              "whose",
              0
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "default": true,
            "level": 1,
            "marker": "property",
            "modifiers": [
              "whose"
            ],
            "query": true,
            "range": {
              "end": 13,
              "start": 0
            },
            "text": "whose property",
            "topLevel": true,
            "types": [
              "property"
            ],
            "value": "property",
            "whose": "whose",
            "word": "property"
          },
          "generatedParenthesized": "",
          "paraphrases": "whose property",
          "paraphrasesParenthesized": "(whose (property))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "whose property"
    ],
    "paraphrasesParenthesized": [
      "(whose (property))"
    ],
    "query": "whose property",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "whose",
                0
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                0
              ],
              "range": {
                "end": 13,
                "start": 6
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "whose",
                0
              ],
              "range": {
                "end": 4,
                "start": 0
              }
            },
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 13,
                "start": 6
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "property",
                1
              ],
              "range": {
                "end": 13,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "between",
          0
        ],
        [
          "list",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "xfx",
          0
        ]
      ],
      [
        [
          "between",
          0
        ],
        [
          "list",
          0
        ],
        [
          "unknown",
          0
        ],
        [
          "xfx",
          0
        ]
      ],
      [
        [
          "between",
          0
        ],
        [
          "list",
          0
        ],
        [
          "unknown",
          1
        ],
        [
          "xfx",
          0
        ]
      ],
      [
        [
          "between",
          0
        ],
        [
          "list",
          1
        ]
      ],
      [
        [
          "between",
          0
        ],
        [
          "list",
          1
        ],
        [
          "xfx",
          0
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        }
      ],
      "operators": [
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "arguments": {
          "default": true,
          "isList": true,
          "level": 1,
          "listable": true,
          "marker": "list",
          "range": {
            "end": 20,
            "start": 12
          },
          "text": "a1 and a2",
          "types": [
            "list",
            "unknown"
          ],
          "value": [
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 13,
                "start": 12
              },
              "text": "a1",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "a1",
              "word": "a1"
            },
            {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "range": {
                "end": 20,
                "start": 19
              },
              "text": "a2",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "a2",
              "word": "a2"
            }
          ],
          "word": "and"
        },
        "context_index": 1,
        "dead": true,
        "default": true,
        "level": 1,
        "marker": "xfx",
        "range": {
          "end": 20,
          "start": 0
        },
        "text": "xfx between a1 and a2",
        "topLevel": true,
        "types": [
          "xfx"
        ],
        "value": "xfx",
        "word": "xfx"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "between",
              0
            ],
            [
              "list",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "xfx",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "between",
              0
            ],
            [
              "list",
              0
            ],
            [
              "unknown",
              0
            ],
            [
              "xfx",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "list",
            0
          ],
          "ops": [
            [
              "between",
              0
            ],
            [
              "list",
              0
            ],
            [
              "xfx",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "xfx",
            0
          ],
          "ops": [
            [
              "between",
              0
            ],
            [
              "xfx",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "between",
            0
          ],
          "ops": [
            [
              "between",
              0
            ]
          ]
        },
        {
          "counter": 6,
          "op": [
            "between",
            1
          ],
          "ops": [
            [
              "between",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "arguments": {
              "default": true,
              "isList": true,
              "level": 1,
              "listable": true,
              "marker": "list",
              "range": {
                "end": 20,
                "start": 12
              },
              "text": "a1 and a2",
              "types": [
                "list",
                "unknown"
              ],
              "value": [
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 13,
                    "start": 12
                  },
                  "text": "a1",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "a1",
                  "word": "a1"
                },
                {
                  "dead": true,
                  "level": 1,
                  "marker": "unknown",
                  "range": {
                    "end": 20,
                    "start": 19
                  },
                  "text": "a2",
                  "types": [
                    "unknown"
                  ],
                  "unknown": true,
                  "value": "a2",
                  "word": "a2"
                }
              ],
              "word": "and"
            },
            "context_index": 1,
            "dead": true,
            "default": true,
            "level": 1,
            "marker": "xfx",
            "range": {
              "end": 20,
              "start": 0
            },
            "text": "xfx between a1 and a2",
            "topLevel": true,
            "types": [
              "xfx"
            ],
            "value": "xfx",
            "word": "xfx"
          },
          "generatedParenthesized": "",
          "paraphrases": "xfx between a1 and a2",
          "paraphrasesParenthesized": "(xfx between ((a1) and (a2)))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "xfx between a1 and a2"
    ],
    "paraphrasesParenthesized": [
      "(xfx between ((a1) and (a2)))"
    ],
    "query": "xfx between a1 and a2",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "xfx",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "between",
                0
              ],
              "range": {
                "end": 10,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "list",
                0
              ],
              "range": {
                "end": 17,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "xfx",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "between",
                0
              ],
              "range": {
                "end": 10,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "list",
                0
              ],
              "range": {
                "end": 17,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "xfx",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "between",
                0
              ],
              "range": {
                "end": 10,
                "start": 4
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 13,
                "start": 12
              }
            },
            {
              "marker": [
                "list",
                0
              ],
              "range": {
                "end": 17,
                "start": 15
              }
            },
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 20,
                "start": 19
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "xfx",
                0
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "between",
                0
              ],
              "range": {
                "end": 10,
                "start": 4
              }
            },
            {
              "marker": [
                "list",
                1
              ],
              "range": {
                "end": 20,
                "start": 12
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "xfx",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "between",
                0
              ],
              "range": {
                "end": 10,
                "start": 4
              }
            },
            {
              "marker": [
                "list",
                1
              ],
              "range": {
                "end": 20,
                "start": 12
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "xfx",
                1
              ],
              "range": {
                "end": 2,
                "start": 0
              }
            },
            {
              "marker": [
                "between",
                1
              ],
              "range": {
                "end": 20,
                "start": 4
              }
            }
          ]
        },
        {
          "counter": 7,
          "operators": [
            {
              "marker": [
                "xfx",
                1
              ],
              "range": {
                "end": 20,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  },
  {
    "associations": [
      [
        [
          "a",
          0
        ],
        [
          "concept",
          0
        ],
        [
          "is",
          0
        ],
        [
          "unknown",
          0
        ]
      ],
      [
        [
          "a",
          0
        ],
        [
          "concept",
          0
        ],
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "a",
          0
        ],
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ],
      [
        [
          "is",
          0
        ],
        [
          "unknown",
          1
        ]
      ]
    ],
    "config": {
      "bridges": [
        {
          "bridge": "{ ...next(operator) }",
          "id": "xfx",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), arguments: after[0] }",
          "id": "between",
          "isA": [
            "preposition"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...before[0], arguments: operator.arguments }",
          "id": "between",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "hierarchyAble",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "readonly",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...context, number: operator.number, object.number: operator.number, negation: true }*",
          "id": "doesnt",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: { number: operator.number, ...before }, property: after[0], do: { left: 'object', right: 'property' } }",
          "id": "have",
          "isA": [
            "canBeDoQuestion",
            "canBeQuestion"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "have",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "property",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0,
          "words": [
            "properties"
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "object",
          "isA": [
            "queryable",
            "theAble"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), possession: true, object: before[0], objects: before }",
          "id": "possession",
          "inverted": true,
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], object: operator.object, possession: true, objects: append(default(after[0].objects, after), operator.objects), marker: after.marker, types: append(after[0].types, ['property']) }",
          "id": "possession",
          "inverted": true,
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), object: after[0], objects: after }",
          "id": "propertyOf",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ],
            [
              "object",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...before[0], object: operator.object, objects: append(default(before[0].objects, before), operator.objects) }",
          "id": "propertyOf",
          "level": 1,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...after[0], query: true, whose: \"whose\", modifiers: append([\"whose\"], after[0].modifiers)}",
          "id": "whose",
          "isA": [
            "object"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], object: operator, objects: [after[0], operator] }",
          "id": "objectPrefix",
          "level": 0,
          "localHierarchy": [
            [
              "property",
              "queryable"
            ],
            [
              "property",
              "theAble"
            ],
            [
              "property",
              "unknown"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator), modifiers: before[0], concept: after[0] }",
          "id": "modifies",
          "isA": [
            "verb"
          ],
          "level": 0,
          "words": [
            {
              "flatten": false,
              "number": "one",
              "word": "modifies"
            },
            {
              "flatten": true,
              "number": "many",
              "word": "modify"
            }
          ]
        },
        {
          "bridge": "{ ...after[0], flatten: false, literally: true }",
          "id": "literally",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "concept",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], verb: after[0], that: operator, generate: ['that', 'verb'], localPriorities: { actLike: [\"subordinatedVerb\", 0] }, bridge_override: { operator: after[0].marker, bridge: '{ ...bridge.subject, postModifiers: [\"conditions\"], modifiers: [], generate: concatm(\"thatClause.\", bridge.generate), thatClause: bridge, conditions: append(bridge.subject.conditions, [bridge]) }' } }",
          "id": "thatVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "negatable"
          ],
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "makeObject",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), suffix: after[0] }",
          "id": "setIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "resetIdSuffix",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), object: after[0] }",
          "id": "by",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ]
          ],
          "optional": {
            "1": "{ marker: 'unknown', implicit: true, concept: true }"
          }
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "debug23",
          "level": 0
        },
        {
          "bridge": "{ ...after, query: ['what'], modifiers: ['what'], what: operator }",
          "id": "what",
          "level": 0,
          "optional": "{ ...next(operator), query: ['what'], determined: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "whatAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), toObject: after[0] }",
          "id": "to",
          "isA": [
            "preposition"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/dialogues.js:182"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "toAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), type: after[0] }",
          "id": "be",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "briefOrWordy",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "yesno",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...before[0], query: [before.marker] }",
          "id": "questionMark",
          "level": 0
        },
        {
          "bridge": "{ number: operator.number, ...context, [context.subject].number: operator.number }",
          "id": "isEd",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "isEder"
            ],
            [
              "unknown",
              "isEdee"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdAble",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEdee",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "isEder",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }",
          "id": "is",
          "isA": [
            "verb"
          ],
          "level": 0,
          "queryBridge": "{ ...next(operator), one: after[0], two: after[1], query: true }"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "is",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 1
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "canBeDoQuestion",
          "level": 2
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "doesAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), before: before[0] }",
          "id": "doesAble",
          "level": 1
        },
        {
          "bridge": "{ query: true, what: operator.marker, ...context, number: operator.number, object.number: operator.number }*",
          "id": "does",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, types: ['reason'], isResponse: true }",
          "id": "why",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "reason",
          "isA": [
            "theAble",
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "nevermind",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...after[0], negated: operator, modifiers: append([\"negated\"], after[0].modifiers) }",
          "id": "not",
          "level": 0,
          "localHierarchy": [
            [
              "unknown",
              "negatable"
            ]
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "negatable",
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "negatable"
            },
            {
              "number": "many",
              "word": "negatables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "memorable",
          "isA": [
            "theAble"
          ],
          "level": 0,
          "words": [
            {
              "number": "one",
              "word": "memorable"
            },
            {
              "number": "many",
              "word": "memorables"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['rememberee'], rememberee: after[0] }",
          "id": "remember",
          "isA": [
            "verb"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], modifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_previous",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], postModifiers: [\"stm_previous\"], stm_previous: operator, pullFromContext: true }",
          "id": "stm_before",
          "isA": [
            "adjective"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), value: append(before, after) }",
          "id": "orList",
          "level": 0,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true,
            "right": [
              {
                "marker": "orAble"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "orList",
          "level": 1,
          "selector": {
            "left": [
              {
                "marker": "orAble"
              }
            ],
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), from: before[0], to: after[0] }",
          "id": "means",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), antecedant: after[0], consequence: after[1].consequence }",
          "id": "if",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), consequence: after[0] }",
          "id": "then",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ifAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "orAble",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), listable: true, isList: true, value: append(before, after) }",
          "id": "list",
          "level": 0,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true,
            "right": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ]
          }
        },
        {
          "bridge": "{ ...operator, value: append(before, operator.value) }",
          "id": "list",
          "level": 1,
          "selector": {
            "left": [
              {
                "pattern": "($type && context.instance == variables.instance)"
              }
            ],
            "match": "same",
            "passthrough": true
          }
        },
        {
          "bridge": "{ ...next(operator), postModifiers: ['value'], value: after[0] }",
          "id": "evaluate",
          "isA": [
            "verb"
          ],
          "level": 0,
          "where": "/home/dev/code/theprogrammablemind/kms/common/evaluate.js:23"
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "everything",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "each",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, distributer: operator, modifiers: append([\"distributer\"], after[0].modifiers)}",
          "id": "every",
          "isA": [
            "article"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "distributable",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...after[0], focusableForPhrase: true, pullFromContext: true, concept: true, wantsValue: true, determiner: \"the\", modifiers: append([\"determiner\"], after[0].modifiers)}",
          "id": "the",
          "level": 0
        },
        {
          "bridge": "{ ...after[0], pullFromContext: false, instance: true, concept: true, number: 'one', wantsValue: true, determiner: operator, modifiers: append(['determiner'], after[0].modifiers) }",
          "id": "a",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "queryable",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "children": [
            "noun"
          ],
          "id": "theAble",
          "level": 0
        },
        {
          "before": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "id": "thisitthat",
          "isA": [
            "queryable"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), pullFromContext: true, unknown: true, determined: true }",
          "id": "it",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "this",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator), unknown: true, pullFromContext: true }",
          "id": "that",
          "isA": [
            "thisitthat"
          ],
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adjective",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "adverb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "article",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "preposition",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "pronoun",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "verb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "subordinatedVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "ingVerb",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "punctuation",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "noun",
          "level": 0
        },
        {
          "bridge": "{ ...before[0], decorators.after: operator, no_convolutions: true }",
          "id": "comma",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": ",",
              "word": ","
            }
          ]
        },
        {
          "bridge": "{ ...after[0], parenthesis: '(' }",
          "id": "leftParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "value": "(",
              "word": "("
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "rightParenthesis",
          "level": 0,
          "words": [
            {
              "depth": "-",
              "value": ")",
              "word": ")"
            }
          ]
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "colon",
          "level": 0,
          "words": [
            ":"
          ]
        },
        {
          "bridge": "{ ...before, postModifiers: append(before.postModifiers, ['endOfSentence']), endOfSentence: operator }",
          "id": "endOfSentence",
          "level": 0,
          "words": [
            "."
          ]
        },
        {
          "bridge": "{ ...next(operator), quote: 'double' }",
          "id": "doubleQuote",
          "level": 0,
          "words": [
            {
              "depth": "+",
              "word": "\""
            }
          ]
        },
        {
          "bridge": "{ ...next(operator), unknown: true, dead: true }",
          "id": "unknown",
          "level": 0
        },
        {
          "bridge": "{ ...next(operator) }",
          "id": "unknown",
          "level": 1
        },
        {
          "allowDups": true,
          "bridge": "{ ...next(operator), value: 'pokemon' }",
          "id": "pokemon",
          "level": 0,
          "transitoryMode": true
        }
      ],
      "operators": [
        {
          "allowDups": true,
          "pattern": "([\"pokemon\"])"
        },
        {
          "pattern": "([hierarchyAble|])"
        },
        {
          "pattern": "(([property]) <([propertyOf|of] ([object]))>)"
        },
        {
          "pattern": "(<whose> ([property]))"
        },
        {
          "pattern": "([readonly])"
        },
        {
          "pattern": "(<objectPrefix|> ([property]))"
        },
        {
          "pattern": "(<(([object]) [possession|])> ([property|]))"
        },
        {
          "pattern": "(([object|]) [have|] ([property|]))"
        },
        {
          "pattern": "(<doesnt|> ([have/0]))"
        },
        {
          "pattern": "(([xfx]) <([between] (words))>)"
        },
        {
          "pattern": "((context.punctuation != true)* [modifies|] (concept))"
        },
        {
          "pattern": "([concept])"
        },
        {
          "pattern": "([literally] (modifies/0))"
        },
        {
          "pattern": "(<thatVerb|that> (verb/0))"
        },
        {
          "pattern": "([makeObject] (word))"
        },
        {
          "pattern": "([setIdSuffix] (word))"
        },
        {
          "pattern": "([resetIdSuffix])"
        },
        {
          "pattern": "(([queryable]) [is|] ([queryable|]))"
        },
        {
          "pattern": "([is:queryBridge|] ([queryable]) ([queryable]))"
        },
        {
          "pattern": "(([queryable]) [(<isEd|> ([isEdAble|]))])"
        },
        {
          "pattern": "(([isEdee])^ <isEdAble|> ([by] ([isEder])?))"
        },
        {
          "pattern": "([isEdee|])"
        },
        {
          "pattern": "([isEder|])"
        },
        {
          "pattern": "([why])"
        },
        {
          "pattern": "([reason])"
        },
        {
          "pattern": "(<what> ([whatAble|]))"
        },
        {
          "pattern": "([what:optional])"
        },
        {
          "pattern": "([be] ([briefOrWordy|]))"
        },
        {
          "pattern": "([([canBeQuestion])])"
        },
        {
          "pattern": "(([canBeQuestion/1,2]) <questionMark|>)"
        },
        {
          "pattern": "(([what]) [(<does|> ([doesAble|]))])"
        },
        {
          "pattern": "([canBeDoQuestion])"
        },
        {
          "pattern": "(<does|> ([canBeDoQuestion/0,1]))"
        },
        {
          "pattern": "([yesno|])"
        },
        {
          "pattern": "([debug23])"
        },
        {
          "pattern": "([to] ([toAble|]))"
        },
        {
          "pattern": "([nevermind])"
        },
        {
          "pattern": "([negatable])"
        },
        {
          "pattern": "([not] (negatable/*))"
        },
        {
          "pattern": "([stm_previous|previous] ([memorable]))"
        },
        {
          "pattern": "(([memorable]) [stm_before|before])"
        },
        {
          "pattern": "([remember] (memorable/*))"
        },
        {
          "pattern": "((phrase) [means] (phrase))"
        },
        {
          "pattern": "([if] ([ifAble]) ([then] ([ifAble])))"
        },
        {
          "pattern": "(([orAble|]) [orList|or] ([orAble|]))"
        },
        {
          "pattern": "(x [list|and] y)"
        },
        {
          "pattern": "([evaluate] (value))"
        },
        {
          "pattern": "([thisitthat|])"
        },
        {
          "pattern": "([it])"
        },
        {
          "pattern": "([this])"
        },
        {
          "pattern": "([that])"
        },
        {
          "pattern": "([everything])"
        },
        {
          "pattern": "([queryable])"
        },
        {
          "pattern": "(<each> ([distributable]))"
        },
        {
          "pattern": "(<every> ([distributable]))"
        },
        {
          "pattern": "(<the|> ([theAble]))"
        },
        {
          "pattern": "(<a|a,an> ([theAble|]))"
        },
        {
          "pattern": "([adjective])"
        },
        {
          "pattern": "([adverb])"
        },
        {
          "pattern": "([article])"
        },
        {
          "pattern": "([preposition])"
        },
        {
          "pattern": "([pronoun])"
        },
        {
          "pattern": "([verb])"
        },
        {
          "pattern": "([subordinatedVerb])"
        },
        {
          "pattern": "([ingVerb])"
        },
        {
          "pattern": "([punctuation])"
        },
        {
          "pattern": "([noun])"
        },
        {
          "pattern": "([leftParenthesis|] (phrase) ([rightParenthesis|]))"
        },
        {
          "pattern": "((before) [comma|])"
        },
        {
          "pattern": "([colon|])"
        },
        {
          "pattern": "((sentence) <endOfSentence|>)"
        },
        {
          "pattern": "([doubleQuote|] (!doubleQuote/*)* (doubleQuote/*))"
        },
        {
          "pattern": "([unknown])"
        }
      ],
      "words": {
        "hierarchy": [
          {
            "child": " ",
            "parent": "space"
          },
          {
            "child": "0",
            "parent": "digit"
          },
          {
            "child": "1",
            "parent": "digit"
          },
          {
            "child": "2",
            "parent": "digit"
          },
          {
            "child": "3",
            "parent": "digit"
          },
          {
            "child": "4",
            "parent": "digit"
          },
          {
            "child": "5",
            "parent": "digit"
          },
          {
            "child": "6",
            "parent": "digit"
          },
          {
            "child": "7",
            "parent": "digit"
          },
          {
            "child": "8",
            "parent": "digit"
          },
          {
            "child": "9",
            "parent": "digit"
          },
          {
            "child": "lower",
            "parent": "letter"
          },
          {
            "child": "upper",
            "parent": "letter"
          },
          {
            "child": "a",
            "parent": "lower"
          },
          {
            "child": "b",
            "parent": "lower"
          },
          {
            "child": "c",
            "parent": "lower"
          },
          {
            "child": "d",
            "parent": "lower"
          },
          {
            "child": "e",
            "parent": "lower"
          },
          {
            "child": "f",
            "parent": "lower"
          },
          {
            "child": "g",
            "parent": "lower"
          },
          {
            "child": "h",
            "parent": "lower"
          },
          {
            "child": "i",
            "parent": "lower"
          },
          {
            "child": "j",
            "parent": "lower"
          },
          {
            "child": "k",
            "parent": "lower"
          },
          {
            "child": "l",
            "parent": "lower"
          },
          {
            "child": "m",
            "parent": "lower"
          },
          {
            "child": "n",
            "parent": "lower"
          },
          {
            "child": "o",
            "parent": "lower"
          },
          {
            "child": "p",
            "parent": "lower"
          },
          {
            "child": "q",
            "parent": "lower"
          },
          {
            "child": "r",
            "parent": "lower"
          },
          {
            "child": "s",
            "parent": "lower"
          },
          {
            "child": "t",
            "parent": "lower"
          },
          {
            "child": "u",
            "parent": "lower"
          },
          {
            "child": "v",
            "parent": "lower"
          },
          {
            "child": "w",
            "parent": "lower"
          },
          {
            "child": "x",
            "parent": "lower"
          },
          {
            "child": "y",
            "parent": "lower"
          },
          {
            "child": "z",
            "parent": "lower"
          },
          {
            "child": "A",
            "parent": "upper"
          },
          {
            "child": "B",
            "parent": "upper"
          },
          {
            "child": "C",
            "parent": "upper"
          },
          {
            "child": "D",
            "parent": "upper"
          },
          {
            "child": "E",
            "parent": "upper"
          },
          {
            "child": "F",
            "parent": "upper"
          },
          {
            "child": "G",
            "parent": "upper"
          },
          {
            "child": "H",
            "parent": "upper"
          },
          {
            "child": "I",
            "parent": "upper"
          },
          {
            "child": "J",
            "parent": "upper"
          },
          {
            "child": "K",
            "parent": "upper"
          },
          {
            "child": "L",
            "parent": "upper"
          },
          {
            "child": "M",
            "parent": "upper"
          },
          {
            "child": "N",
            "parent": "upper"
          },
          {
            "child": "O",
            "parent": "upper"
          },
          {
            "child": "P",
            "parent": "upper"
          },
          {
            "child": "Q",
            "parent": "upper"
          },
          {
            "child": "R",
            "parent": "upper"
          },
          {
            "child": "S",
            "parent": "upper"
          },
          {
            "child": "T",
            "parent": "upper"
          },
          {
            "child": "U",
            "parent": "upper"
          },
          {
            "child": "V",
            "parent": "upper"
          },
          {
            "child": "W",
            "parent": "upper"
          },
          {
            "child": "X",
            "parent": "upper"
          },
          {
            "child": "Y",
            "parent": "upper"
          },
          {
            "child": "Z",
            "parent": "upper"
          },
          {
            "child": "letter",
            "parent": "alphanumeric"
          },
          {
            "child": "digit",
            "parent": "alphanumeric"
          },
          {
            "child": "_",
            "parent": "alphanumeric"
          },
          {
            "child": "~",
            "parent": "punctuation"
          },
          {
            "child": "!",
            "parent": "punctuation"
          },
          {
            "child": "@",
            "parent": "punctuation"
          },
          {
            "child": "#",
            "parent": "punctuation"
          },
          {
            "child": "$",
            "parent": "punctuation"
          },
          {
            "child": "%",
            "parent": "punctuation"
          },
          {
            "child": "^",
            "parent": "punctuation"
          },
          {
            "child": "&",
            "parent": "punctuation"
          },
          {
            "child": "*",
            "parent": "punctuation"
          },
          {
            "child": "(",
            "parent": "punctuation"
          },
          {
            "child": ")",
            "parent": "punctuation"
          },
          {
            "child": "+",
            "parent": "punctuation"
          },
          {
            "child": "-",
            "parent": "punctuation"
          },
          {
            "child": "=",
            "parent": "punctuation"
          },
          {
            "child": "[",
            "parent": "punctuation"
          },
          {
            "child": "]",
            "parent": "punctuation"
          },
          {
            "child": "{",
            "parent": "punctuation"
          },
          {
            "child": "}",
            "parent": "punctuation"
          },
          {
            "child": "\\",
            "parent": "punctuation"
          },
          {
            "child": "|",
            "parent": "punctuation"
          },
          {
            "child": ";",
            "parent": "punctuation"
          },
          {
            "child": ":",
            "parent": "punctuation"
          },
          {
            "child": ",",
            "parent": "punctuation"
          },
          {
            "child": "<",
            "parent": "punctuation"
          },
          {
            "child": ">",
            "parent": "punctuation"
          },
          {
            "child": "/",
            "parent": "punctuation"
          },
          {
            "child": "?",
            "parent": "punctuation"
          },
          {
            "child": "'",
            "parent": "punctuation"
          },
          {
            "child": "\"",
            "parent": "punctuation"
          }
        ],
        "literals": {
          " 's": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "\"": [
            {
              "id": "doubleQuote",
              "initial": "{\"word\":\"\\\"\",\"depth\":\"+\"}",
              "word": "\""
            }
          ],
          "(": [
            {
              "id": "leftParenthesis",
              "initial": "{\"word\":\"(\",\"value\":\"(\",\"depth\":\"+\"}",
              "word": "("
            }
          ],
          ")": [
            {
              "id": "rightParenthesis",
              "initial": "{\"word\":\")\",\"value\":\")\",\"depth\":\"-\"}",
              "word": ")"
            }
          ],
          ",": [
            {
              "id": "comma",
              "initial": "{\"word\":\",\",\"value\":\",\",\"depth\":\"+\"}",
              "word": ","
            }
          ],
          ".": [
            {
              "id": "endOfSentence",
              "initial": "{ value: \"endOfSentence\"}"
            }
          ],
          ":": [
            {
              "id": "colon",
              "initial": "{ value: \"colon\"}"
            }
          ],
          "<<possession>>": [
            {
              "id": "possession",
              "initial": "{ value: 'possession' }"
            }
          ],
          "?": [
            {
              "id": "questionMark",
              "initial": "{}"
            }
          ],
          "are": [
            {
              "id": "is",
              "initial": "{ number: 'many' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'many' }"
            }
          ],
          "brief": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'brief' }"
            }
          ],
          "do": [
            {
              "id": "does",
              "initial": "{ number: 'many' }"
            }
          ],
          "does": [
            {
              "id": "does",
              "initial": "{ number: 'one' }"
            }
          ],
          "doesnt": [
            {
              "id": "doesnt",
              "initial": "{ number: 'one' }"
            }
          ],
          "dont": [
            {
              "id": "doesnt",
              "initial": "{ number: 'many' }"
            }
          ],
          "has": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'one' }"
            }
          ],
          "have": [
            {
              "id": "have",
              "initial": "{ doesable: true, number: 'many' }"
            }
          ],
          "is": [
            {
              "id": "is",
              "initial": "{ number: 'one' }"
            },
            {
              "id": "isEd",
              "initial": "{ number: 'one' }"
            }
          ],
          "memorable": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorable\",\"number\":\"one\"}",
              "word": "memorable"
            }
          ],
          "memorables": [
            {
              "id": "memorable",
              "initial": "{\"word\":\"memorables\",\"number\":\"many\"}",
              "word": "memorables"
            }
          ],
          "modifies": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modifies\",\"number\":\"one\",\"flatten\":false}",
              "word": "modifies"
            }
          ],
          "modify": [
            {
              "id": "modifies",
              "initial": "{\"word\":\"modify\",\"number\":\"many\",\"flatten\":true}",
              "word": "modify"
            }
          ],
          "negatable": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatable\",\"number\":\"one\"}",
              "word": "negatable"
            }
          ],
          "negatables": [
            {
              "id": "negatable",
              "initial": "{\"word\":\"negatables\",\"number\":\"many\"}",
              "word": "negatables"
            }
          ],
          "no": [
            {
              "id": "yesno",
              "initial": "{ value: false }"
            }
          ],
          "pokemon": [
            {
              "id": "pokemon",
              "initial": "{ value: \"pokemon\", number: \"many\" }"
            },
            {
              "id": "pokemon",
              "initial": "{ value: \"pokemon\", number: \"one\" }"
            }
          ],
          "properties": [
            {
              "id": "property",
              "initial": "{ value: \"property\"}"
            }
          ],
          "the": [
            {
              "id": "the",
              "initial": "{ modifiers: [] }"
            }
          ],
          "who": [
            {
              "id": "what",
              "initial": "{ modifiers: [], query: true }"
            }
          ],
          "wordy": [
            {
              "id": "briefOrWordy",
              "initial": "{ value: 'wordy' }"
            }
          ],
          "yes": [
            {
              "id": "yesno",
              "initial": "{ value: true }"
            }
          ]
        },
        "patterns": [
          {
            "defs": [
              {
                "id": "possession",
                "initial": "{ value: 'possession' }",
                "uuid": "properties1"
              }
            ],
            "pattern": [
              "'s"
            ]
          },
          {
            "defs": [
              {
                "remove": true,
                "uuid": "tokenize2"
              }
            ],
            "pattern": [
              {
                "type": "space"
              },
              {
                "repeat": true
              }
            ]
          },
          {
            "allow_partial_matches": false,
            "check_spelling": true,
            "defs": [
              {
                "id": "unknown",
                "initial": "{ value: text, unknown: true }",
                "uuid": "tokenize2"
              }
            ],
            "is_unknown": true,
            "pattern": [
              {
                "type": "alphanumeric"
              },
              {
                "repeat": true
              }
            ],
            "scale": 0.8
          }
        ]
      }
    },
    "contexts": [
      {
        "context_index": 1,
        "dead": true,
        "level": 2,
        "marker": "is",
        "number": "one",
        "one": {
          "dead": true,
          "level": 1,
          "marker": "unknown",
          "number": "one",
          "range": {
            "end": 19,
            "start": 0
          },
          "text": "pokemon",
          "types": [
            "unknown"
          ],
          "unknown": true,
          "value": "pokemon",
          "word": "pokemon"
        },
        "range": {
          "end": 19,
          "start": 0
        },
        "text": "pokemon is a concept",
        "topLevel": true,
        "touchedBy": [
          "properties#call2"
        ],
        "two": {
          "concept": true,
          "dead": true,
          "default": true,
          "determiner": {
            "default": true,
            "level": 0,
            "marker": "a",
            "range": {
              "end": 11,
              "start": 11
            },
            "text": "a",
            "word": "a"
          },
          "instance": true,
          "level": 1,
          "marker": "concept",
          "modifiers": [
            "determiner"
          ],
          "number": "one",
          "pullFromContext": false,
          "range": {
            "end": 19,
            "start": 11
          },
          "text": "a concept",
          "types": [
            "concept"
          ],
          "value": "concept",
          "wantsValue": true,
          "word": "concept"
        },
        "word": "is"
      }
    ],
    "generatedParenthesized": [
      ""
    ],
    "metadata": {
      "opChoices": [
        {
          "counter": 1,
          "op": [
            "unknown",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "concept",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        },
        {
          "counter": 2,
          "op": [
            "concept",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "concept",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 3,
          "op": [
            "a",
            0
          ],
          "ops": [
            [
              "a",
              0
            ],
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 4,
          "op": [
            "is",
            0
          ],
          "ops": [
            [
              "is",
              0
            ]
          ]
        },
        {
          "counter": 5,
          "op": [
            "is",
            1
          ],
          "ops": [
            [
              "is",
              1
            ]
          ]
        }
      ]
    },
    "objects": {
      "nameToUUID": {
        "articles": "articles2",
        "asking": "asking2",
        "concept": "concept2",
        "conjunction": "conjunction2",
        "dialogues": "dialogues2",
        "evaluate": "evaluate2",
        "gdefaults": "gdefaults2",
        "meta": "meta2",
        "negation": "negation2",
        "pos": "pos2",
        "properties": "properties1",
        "punctuation": "punctuation2",
        "sdefaults": "sdefaults2",
        "stm": "stm2",
        "tokenize": "tokenize2"
      },
      "namespaced": {
        "articles2": {
        },
        "asking2": {
        },
        "concept2": {
          "defaultTypesForHierarchy": {
          },
          "valueToWords": [
          ]
        },
        "conjunction2": {
        },
        "dialogues2": {
          "idSuffix": "",
          "mentioned": [
          ],
          "variables": {
          }
        },
        "evaluate2": {
        },
        "gdefaults2": {
        },
        "meta2": {
        },
        "negation2": {
        },
        "pos2": {
        },
        "properties1": {
          "children": {
            "adjective": [
              "stm_before"
            ],
            "article": [
              "a",
              "the",
              "each",
              "every"
            ],
            "canBeDoQuestion": [
              "have"
            ],
            "canBeQuestion": [
              "have",
              "is"
            ],
            "hierarchyAble": [
              "unknown"
            ],
            "ifAble": [
              "orAble"
            ],
            "object": [
              "what",
              "whose"
            ],
            "preposition": [
              "between",
              "propertyOf",
              "to"
            ],
            "pronoun": [
              "it",
              "this"
            ],
            "punctuation": [
              "questionMark"
            ],
            "queryable": [
              "xfx",
              "hierarchyAble",
              "readonly",
              "property",
              "object",
              "concept",
              "doubleQuote",
              "theAble",
              "unknown",
              "it",
              "what",
              "whatAble",
              "negatable",
              "this",
              "reason",
              "distributable",
              "thisitthat"
            ],
            "theAble": [
              "property",
              "object",
              "concept",
              "unknown",
              "reason",
              "memorable",
              "noun"
            ],
            "thisitthat": [
              "it",
              "this",
              "that"
            ],
            "toAble": [
              "it"
            ],
            "verb": [
              "modifies",
              "is",
              "remember",
              "evaluate"
            ]
          },
          "concepts": [
            "properties",
            "unknown",
            "hierarchyAble",
            "what",
            "object",
            "xfx",
            "queryable",
            "between",
            "preposition",
            "readonly",
            "have",
            "canBeDoQuestion",
            "canBeQuestion",
            "property",
            "theAble",
            "propertyOf",
            "whose",
            "concept",
            "modifies",
            "verb",
            "doubleQuote",
            "it",
            "pronoun",
            "this",
            "questionMark",
            "punctuation",
            "a",
            "article",
            "the",
            "whatAble",
            "negatable",
            "is",
            "toAble",
            "to",
            "reason",
            "memorable",
            "remember",
            "stm_before",
            "adjective",
            "orAble",
            "ifAble",
            "evaluate",
            "each",
            "every",
            "distributable",
            "noun",
            "thisitthat",
            "that"
          ],
          "parents": {
            "a": [
              "article"
            ],
            "between": [
              "preposition"
            ],
            "concept": [
              "theAble",
              "queryable"
            ],
            "distributable": [
              "queryable"
            ],
            "doubleQuote": [
              "queryable"
            ],
            "each": [
              "article"
            ],
            "evaluate": [
              "verb"
            ],
            "every": [
              "article"
            ],
            "have": [
              "canBeDoQuestion",
              "canBeQuestion"
            ],
            "hierarchyAble": [
              "queryable"
            ],
            "is": [
              "canBeQuestion",
              "verb"
            ],
            "it": [
              "pronoun",
              "queryable",
              "toAble",
              "thisitthat"
            ],
            "memorable": [
              "theAble"
            ],
            "modifies": [
              "verb"
            ],
            "negatable": [
              "queryable"
            ],
            "noun": [
              "theAble"
            ],
            "object": [
              "queryable",
              "theAble"
            ],
            "orAble": [
              "ifAble"
            ],
            "property": [
              "queryable",
              "theAble"
            ],
            "propertyOf": [
              "preposition"
            ],
            "questionMark": [
              "punctuation"
            ],
            "readonly": [
              "queryable"
            ],
            "reason": [
              "theAble",
              "queryable"
            ],
            "remember": [
              "verb"
            ],
            "stm_before": [
              "adjective"
            ],
            "that": [
              "thisitthat"
            ],
            "the": [
              "article"
            ],
            "theAble": [
              "queryable"
            ],
            "this": [
              "pronoun",
              "queryable",
              "thisitthat"
            ],
            "thisitthat": [
              "queryable"
            ],
            "to": [
              "preposition"
            ],
            "unknown": [
              "hierarchyAble",
              "theAble",
              "queryable"
            ],
            "what": [
              "object",
              "queryable"
            ],
            "whatAble": [
              "queryable"
            ],
            "whose": [
              "object"
            ],
            "xfx": [
              "queryable"
            ]
          },
          "properties": {
            "handlers": {
            },
            "initHandlers": [
            ],
            "root": {
              "a": {
              },
              "adjective": {
              },
              "article": {
              },
              "between": {
              },
              "canBeDoQuestion": {
              },
              "canBeQuestion": {
              },
              "concept": {
              },
              "distributable": {
              },
              "doubleQuote": {
              },
              "each": {
              },
              "evaluate": {
              },
              "every": {
              },
              "have": {
              },
              "hierarchyAble": {
              },
              "ifAble": {
              },
              "is": {
              },
              "it": {
              },
              "memorable": {
              },
              "modifies": {
              },
              "negatable": {
              },
              "noun": {
              },
              "object": {
              },
              "orAble": {
              },
              "preposition": {
              },
              "pronoun": {
              },
              "property": {
              },
              "propertyOf": {
              },
              "punctuation": {
              },
              "queryable": {
              },
              "questionMark": {
              },
              "readonly": {
              },
              "reason": {
              },
              "remember": {
              },
              "stm_before": {
              },
              "that": {
              },
              "the": {
              },
              "theAble": {
              },
              "this": {
              },
              "thisitthat": {
              },
              "to": {
              },
              "toAble": {
              },
              "unknown": {
              },
              "verb": {
              },
              "what": {
              },
              "whatAble": {
              },
              "whose": {
              },
              "xfx": {
              }
            }
          },
          "property": {
          },
          "relations": [
          ],
          "valueToWords": {
          }
        },
        "punctuation2": {
        },
        "sdefaults2": {
        },
        "stm2": {
          "mentioned": [
          ],
          "variables": {
          }
        },
        "tokenize2": {
        }
      },
      "processed": [
        {
          "context": {
            "context_index": 1,
            "dead": true,
            "level": 2,
            "marker": "is",
            "number": "one",
            "one": {
              "dead": true,
              "level": 1,
              "marker": "unknown",
              "number": "one",
              "range": {
                "end": 19,
                "start": 0
              },
              "text": "pokemon",
              "types": [
                "unknown"
              ],
              "unknown": true,
              "value": "pokemon",
              "word": "pokemon"
            },
            "range": {
              "end": 19,
              "start": 0
            },
            "text": "pokemon is a concept",
            "topLevel": true,
            "touchedBy": [
              "properties#call2"
            ],
            "two": {
              "concept": true,
              "dead": true,
              "default": true,
              "determiner": {
                "default": true,
                "level": 0,
                "marker": "a",
                "range": {
                  "end": 11,
                  "start": 11
                },
                "text": "a",
                "word": "a"
              },
              "instance": true,
              "level": 1,
              "marker": "concept",
              "modifiers": [
                "determiner"
              ],
              "number": "one",
              "pullFromContext": false,
              "range": {
                "end": 19,
                "start": 11
              },
              "text": "a concept",
              "types": [
                "concept"
              ],
              "value": "concept",
              "wantsValue": true,
              "word": "concept"
            },
            "word": "is"
          },
          "generatedParenthesized": "",
          "paraphrases": "pokemon is a concept",
          "paraphrasesParenthesized": "((pokemon) is ((a) (concept)))",
          "responses": [
            ""
          ]
        }
      ]
    },
    "paraphrases": [
      "pokemon is a concept"
    ],
    "paraphrasesParenthesized": [
      "((pokemon) is ((a) (concept)))"
    ],
    "query": "pokemon is a concept",
    "responses": [
      ""
    ],
    "summaries": [
      [
        {
          "counter": 1,
          "operators": [
            {
              "marker": [
                "unknown",
                0
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "a",
                0
              ],
              "range": {
                "end": 11,
                "start": 11
              }
            },
            {
              "marker": [
                "concept",
                0
              ],
              "range": {
                "end": 19,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 2,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "a",
                0
              ],
              "range": {
                "end": 11,
                "start": 11
              }
            },
            {
              "marker": [
                "concept",
                0
              ],
              "range": {
                "end": 19,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 3,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "a",
                0
              ],
              "range": {
                "end": 11,
                "start": 11
              }
            },
            {
              "marker": [
                "concept",
                1
              ],
              "range": {
                "end": 19,
                "start": 13
              }
            }
          ]
        },
        {
          "counter": 4,
          "operators": [
            {
              "marker": [
                "unknown",
                1
              ],
              "range": {
                "end": 6,
                "start": 0
              }
            },
            {
              "marker": [
                "is",
                0
              ],
              "range": {
                "end": 9,
                "start": 8
              }
            },
            {
              "marker": [
                "concept",
                1
              ],
              "range": {
                "end": 19,
                "start": 11
              }
            }
          ]
        },
        {
          "counter": 5,
          "operators": [
            {
              "marker": [
                "is",
                1
              ],
              "range": {
                "end": 19,
                "start": 0
              }
            }
          ]
        },
        {
          "counter": 6,
          "operators": [
            {
              "marker": [
                "is",
                2
              ],
              "range": {
                "end": 19,
                "start": 0
              }
            }
          ]
        }
      ]
    ]
  }
]